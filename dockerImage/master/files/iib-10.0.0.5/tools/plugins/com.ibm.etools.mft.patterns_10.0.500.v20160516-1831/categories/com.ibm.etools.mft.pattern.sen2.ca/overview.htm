<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-us" xml:lang="en-us">
<head><!-- 

(C) COPYRIGHT International Business Machines Corp., 2010, 2012

All Rights Reserved * Licensed Materials - Property of IBM

-->
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="copyright" content="Copyright IBM Corporation 2010" />
<meta name="DC.Rights.Owner" content="Copyright IBM Corporation 2010" />
<meta name="abstract" content="Use the Service Access pattern to accept input messages from client applications, and to call a web service by using message data."/>
<!-- Licensed Materials Property of IBM -->
<!-- US Government Users Restricted Rights -->
<!-- Use, duplication or disclosure restricted by -->
<!-- GSA ADP Schedule Contract with IBM Corp. -->
<link rel="stylesheet" type="text/css" href="./css/pattern.css"/>
<title>Service Access pattern</title>
<script language="JavaScript" src="../../help/LiveHelp.js"> </script></head>
<body id="sen2.ca.overview">
<h1 class="topictitle1"><span></span>Service Access pattern</h1>
<div><p class="shortdesc">Use a Service Access pattern to provide loosely coupled service access  
to services from applications that are not service enabled.</p> 
<p>The Service Access pattern provides the mediations to transform application input 
into standard web service requests, and also a mediation
point for the application of standard functions such as logging.</p></div>
<div class="image"><img src="access.gif" alt="A diagram showing the behavior of the pattern. Applications send input messages to the broker, which calls the required services." />
<div class="section"><h2 class="sectiontitle">The context</h2>
<p>When an enterprise
architecture moves towards a service-oriented architecture, it is often
necessary to accommodate existing systems that run large parts
of the business, but that do not have the capability to access services.</p>
</div>
<div class="section"><h2 class="sectiontitle">The problem</h2></div>
<p>Existing applications
do not fit naturally into a service-oriented architecture (SOA) environment,
 and changes to such systems
are expensive and require scarce skills. The problem is to find a way of
integrating such systems with newer service-oriented packages and
applications. In particular, it is necessary to create a bridge between
applications that emit messages either directly or by using adapters, 
and the synchronous HTTP protocol that is generally used with web services.
</p>
<div class="section"><h2 class="sectiontitle">Selection guidance</h2></div>
<p>This pattern is
appropriate when an enterprise wants existing applications 
to utilize the services available in an SOA environment,
but the applications cannot easily be upgraded to call services directly.</p>
<p>This pattern is used where client applications provide an 
XML messaging interface containing data that is processed by calls to web services. 
The pattern can be extended
with transforms to support client applications with non-XML messaging 
interfaces.</p>
<p></p>
<p></p>
</div>
</body></html>
