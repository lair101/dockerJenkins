# Licensed Materials - Property of IBM  
#      
# 5724-X98
# 5724-Y15
# 5655-V82
# 5724-Y00
# 5724-Y17
# 5655-V84
# 5724-Y01
# 5724-Y18
# 5724-Y02 	
# 5724-Y21 
# 5724-Y03 	
# 5724-Y22 	
# 5724-Y23 	
# 5655-V87
# 5725-B69
# 5724-U90
# 5655-Y17
# 5725-C52
# 
# 5655-Y31
#         
# © Copyright IBM Corp. 1987, 2012 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.

#------------------------------------------------------------------------
# BQL.properties
#------------------------------------------------------------------------

#------------------------------------------------------------------------
# properties

anotherPattern = un altro <concept,NO_ARTICLE>
isUnderVerbalization = {0} è sotto {1}
isOverVerbalization = {0} è sopra {1}

# the "+/-" char
defaultGeneratorText = [\u00b1]

<T-class-condition>.text = Trova <class> <query-condition>

<T-class-condition>.<class>.placeHolder.text = inserisci una classe
<T-class-condition>.<class>.emptyText = <seleziona una classe>

<T-query-condition>.<condition>.placeHolder.text = inserisci una condizione
<T-class-condition>.<query-condition>.optionalMarker = [tali che]
<T-class-condition>.<query-condition>.elementText = tali che <...>
<T-class-condition>.<query-condition>.toolTip = Aggiungi un test

<T-class-rule>.<actions>.optionalMarker = [Fai]
<T-class-rule>.<actions>.elementText = Fai <...>

<T-actions>.<action>.placeHolder.text = inserisci un'azione

<T-action>.placeHolder.text = inserisci un'azione
<T-action>.emptyText = <seleziona un'azione>
<T-action>.label = azione
<T-action>.toolTip = Aggiungi una azione

<T-getter-sentence>.<role>.placeHolder.text = inserisci una variabile

<T-expression>.<may-apply-when-check>.text = <holder> si può applicare quando [ <argument> ]
<T-expression>.<may-apply-when-check>.menuText = <artefatto regola> si può applicare quando <condizione semantica>
<T-expression>.<may-apply-when-check>.documentation = Restituisce tutte le regole in cui la parte delle condizioni potrebbe soddisfare la &lt;condizione semantica&gt;, oppure dove non esiste nulla nella condizione della regola che contraddirebbe la &lt;condizione semantica&gt;. Questa query può comprendere regole con condizioni che non sono specificatamente rilevanti per la &lt;condizione semantica&gt;.
<T-expression>.<may-be-triggered-by-check>.text = <holder> può divenire applicabile quando [ <argument> ]
<T-expression>.<may-be-triggered-by-check>.menuText = <artefatto regola> può divenire applicabile quando <condizione semantica>
<T-expression>.<may-be-triggered-by-check>.documentation = Restituisce solo le regole in cui la parte delle condizioni potrebbe soddisfare la &lt;condizione semantica&gt;. Non restituisce le regole con condizioni che non sono specificatamente rilevanti per la &lt;condizione semantica&gt;.
<T-expression>.<lead-to-state-check>.text = <holder> può condurre ad un stato dove [ <argument> ]
<T-expression>.<lead-to-state-check>.menuText = <artefatto regola> può condurre ad un stato dove <condizione semantica>
<T-expression>.<lead-to-state-check>.documentation = Restituisce le regole che, quando eseguite, potrebbero visualizzare un risultato che soddisfa la &lt;condizione semantica&gt;. Questa query prende in considerazione le parti delle condizioni e delle azioni di una regola. Filtra le regole in base al loro effetto. Non restituisce le regole che non hanno influenza sulla &lt;condizione semantica&gt;.
<T-parametrized-check-condition>.<holder>.emptyText = <artefatto regola>
<T-parametrized-check-condition>.<holder>.placeHolder.text = inserisci un simbolo
<T-parametrized-check-condition>.<argument>.placeHolder.text = condizione semantica
<T-parametrized-check-condition>.placeHolder.text = inserisci una condizione parametrizzata

<T-bom-member-read-check-condition>.text = <holder> usa il valore <argument>
<T-bom-member-read-check-condition>.<argument>.verbalization.partitive = true
<T-bom-member-read-check-condition>.menuText = <artefatto regola> usa il valore <di membro>
<T-bom-member-read-check-condition>.documentation = Restituisce regole che utilizzano i valori di &lt;un membro&gt;.
<T-bom-member-read-check-condition>.<holder>.emptyText = <artefatto regola>
<T-bom-member-read-check-condition>.<holder>.placeHolder.text = inserisci un membro
<T-bom-member-read-check-condition>.<argument>.emptyText = <un membro>
<T-bom-member-read-check-condition>.<argument>.placeHolder.text = membro
<T-bom-member-read-check-condition>.placeHolder.text = inserisci un membro

<T-bom-member-write-check-condition>.text = <holder> cambia il valore <argument>
<T-bom-member-write-check-condition>.<argument>.verbalization.partitive = true
<T-bom-member-write-check-condition>.menuText = <artefatto regola> cambia il valore <di membro>
<T-bom-member-write-check-condition>.documentation = Restituisce regole che modificano &lt;un membro&gt;.
<T-bom-member-write-check-condition>.<holder>.emptyText = <artefatto regola>
<T-bom-member-write-check-condition>.<holder>.placeHolder.text = inserisci un membro
<T-bom-member-write-check-condition>.<argument>.emptyText = <un membro>
<T-bom-member-write-check-condition>.<argument>.placeHolder.text = membro
<T-bom-member-write-check-condition>.placeHolder.text = inserisci un membro

<T-use-action-phrase-check-condition>.text = <holder> usa la frase [ <argument> <argument-constraint> ]
<T-use-action-phrase-check-condition>.menuText = <artefatto regola> usa la frase <membro>
<T-use-action-phrase-check-condition>.documentation = Restituisce regole che chiamano un metodo di verbalizzazione.
<T-use-action-phrase-check-condition>.<holder>.emptyText = <artefatto regola>
<T-use-action-phrase-check-condition>.<holder>.placeHolder.text = inserisci un simbolo
<T-use-action-phrase-check-condition>.<argument>.emptyText = <una frase>
<T-use-action-phrase-check-condition>.<argument>.placeHolder.text = frase
<T-use-action-phrase-check-condition>.placeHolder.text = inserisci una frase
<T-use-action-phrase-check-condition>.<argument-constraint>.emptyText = <vincolo>
<T-use-action-phrase-check-condition>.<argument-constraint>.optionalMarker = [dove]
<T-use-action-phrase-check-condition>.<argument-constraint>.elementText = , dove <...>
<T-use-action-phrase-check-condition>.<argument-constraint>.placeHolder.text = vincolo

#------------------------------------------------------------------------
# Error messages

Marker.NotBQLAction.message = Azione della query non valida: ''{0}''
Marker.NotBQLCondition.message = Condizione della query non valida: ''{0}''
Marker.NotSemanticQueryExpression.message = Espressione semantica del test non valida: ''{0}''
Marker.NotCorrectArgInActionPhrase.message = L'argomento deve essere una variabile anonima.
Marker.OtherEnvironmentError.message = Questa query contiene costruzioni che non sono valide per questo ambiente.
