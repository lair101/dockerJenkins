# UTF-8

# Genders for terms
@classe\ BOM#gender = FEMALE
@regola\ tecnica#gender = FEMALE
@regola#gender = FEMALE
@regola\ aziendale#gender = FEMALE
@tabella\ decisionale#gender = FEMALE
@struttura\ decisionale#gender = FEMALE
@regola\ BRL#gender = FEMALE
@regola\ d'azione#gender = FEMALE
@funzione#gender = FEMALE
@interrogazione\ riepilogo#gender = FEMALE
@vista\ intelligente#gender = FEMALE
@variabile\ impostata#gender = FEMALE
@variabile#gender = FEMALE
@interrogazione#gender = FEMALE
@suite\ scenario#gender = FEMALE
@linea\ di\ base#gender = FEMALE
@suite\ di\ test#gender = FEMALE
@simulazione#gender = FEMALE

# Plurals for terms
@classe\ BOM#plural = classi BOM
@membro\ BOM#plural = membri BOM
@elemento\ del\ progetto#plural = elementi del progetto
@elemento\ del\ pacchetto#plural = elementi del pacchetto
@artefatto\ regola#plural =	artefatti regola
@regola\ tecnica#plural = regole tecniche
@modello#plural =	modelli
@regola#plural = regole
@stato#plural =	stati
@regola\ aziendale#plural = regole aziendali
@tabella\ decisionale#plural = tabelle decisionali
@struttura\ decisionale#plural = strutture decisionali
@regola\ BRL#plural =	regole BRL
@regola\ d'azione#plural = regole d'azione
@funzione#plural = funzioni
@pacchetto\ di\ regole#plural =	pacchetti di regole
@interrogazione\ riepilogo#plural = interrogazioni riepilogo
@vista\ intelligente#plural =	viste intelligenti
@flusso\ di\ regole#plural = flussi di regole
@insieme\ di\ variabili#plural = insiemi di variabili
@variabile#plural = variabili
@parametro#plural = parametri
@interrogazione#plural = interrogazione
@file\ scenario#plural = files scenario
@suite\ scenario#plural = suites scenario
@linea\ di\ base#plural = linee di base
@estrattore#plural = estrattori
@punto\ di\ ingresso#plural = punti di ingresso
@suite\ di\ test#plural = suites di test
@simulazione#plural = simulazioni
@login#plural = login
@gruppo#plural = gruppi

@nome#plural = nomi
@documentazione#plural = documentazioni
@documentazione#gender = FEMALE
@pacchetto\ padre#plural = pacchetti padre
@definizione#plural = definizioni
@definizione#gender = FEMALE
@data\ effettiva#plural = date effettive
@data\ effettiva#gender = FEMALE
@data\ di\ scadenza#plural = date di scadenza
@data\ di\ scadenza#gender = FEMALE
@stato#plural = stati
@priorit?#plural = priorit?
@priorit?#gender = FEMALE
@azioni\ iniziali#gender = FEMALE
@azioni\ finali#gender = FEMALE

#
# BOM Class
#
bql.BOMClass#label = classe BOM

#
# BOM Member
#
bql.BOMMember#label = membro BOM

#
# Project Element
#
bql.ProjectElement#label = elemento del progetto
bql.ProjectElement.getName()#sentence.navigation = {nome} {this, PARTITIVE_ARTICLE}
bql.ProjectElement.delete()#sentence.action = cancella {this}
bql.ProjectElement.getCreatedBy()#sentence.navigation = il creatore {this, PARTITIVE_ARTICLE}
bql.ProjectElement.createdByMe()#sentence.navigation = il creatore {this, PARTITIVE_ARTICLE} sono io
bql.ProjectElement.notCreatedByMe()#sentence.navigation = il creatore {this, PARTITIVE_ARTICLE} non sono io
bql.ProjectElement.getCreatedOn()#sentence.navigation = la data di creazione {this, PARTITIVE_ARTICLE}
bql.ProjectElement.group#sentence.navigation = {gruppo} {this, PARTITIVE_ARTICLE}
bql.ProjectElement.group#sentence.action = assegna il gruppo {this, PARTITIVE_ARTICLE} a {gruppo}
bql.ProjectElement.resetGroup()#sentence.action = azzera il gruppo {this, PARTITIVE_ARTICLE}
bql.ProjectElement.getLastChangedBy()#sentence.navigation = il nome dell'ultimo modificatore {this, PARTITIVE_ARTICLE}
bql.ProjectElement.lastChangedByMe()#sentence.navigation = il nome dell'ultimo modificatore {this, PARTITIVE_ARTICLE} sono io
bql.ProjectElement.notLastChangedByMe()#sentence.navigation = il nome dell'ultimo modificatore {this, PARTITIVE_ARTICLE} non sono io
bql.ProjectElement.getLastChangedOn()#sentence.navigation = la data di ultima modifica {this, PARTITIVE_ARTICLE}

#
# Package Element
#
bql.PackageElement#label = elemento del pacchetto
bql.PackageElement.setDocumentation(java.lang.String)#sentence.action = assegna la documentazione {this, PARTITIVE_ARTICLE} a {0}
bql.PackageElement.getDocumentation()#sentence.navigation = {documentazione} {this, PARTITIVE_ARTICLE}
bql.PackageElement.getRulePackage()#sentence.navigation = {pacchetto di regole} {this, PARTITIVE_ARTICLE}
bql.PackageElement.copyToPackage(java.lang.String)#sentence.action = copia {this} nel pacchetto {0}
bql.PackageElement.moveToPackage(java.lang.String)#sentence.action = sposta {this} nel pacchetto {0}
bql.PackageElement.isInPackage(java.lang.String)#sentence.navigation = {this} è nel pacchetto {0}

#
# Rule Artifact
#
bql.RuleArtifact#label = artefatto regola
bql.RuleArtifact.setActive(java.lang.Boolean)#sentence.action = assegna lo stato attivo {this, PARTITIVE_ARTICLE} a {0}
bql.RuleArtifact.isActive()#sentence.navigation = {this} è attiva
bql.RuleArtifact.isNotActive()#sentence.navigation = {this} non è attiva
bql.RuleArtifact.setEditable(java.lang.Boolean)#sentence.action = assegna lo stato editabile {this, PARTITIVE_ARTICLE} a {0}
bql.RuleArtifact.isEditable()#sentence.navigation = {this} è editabile
bql.RuleArtifact.isNotEditable()#sentence.navigation = {this} non è editabile
bql.Rule.getPriority()#sentence.navigation = la priorità {this, PARTITIVE_ARTICLE}
bql.Rule.setPriority(java.lang.String)#sentence.action = impostare la priorità {this, PARTITIVE_ARTICLE} a {0}
bql.RuleArtifact.addValueToTag(java.lang.String,java.lang.String)#sentence.action = assegna la proprietà {1} a {0} per {this}
bql.RuleArtifact.containsTag(java.lang.String,java.lang.String)#sentence.navigation = il contrassegno {0} {this, PARTITIVE_ARTICLE} contiene {1}
bql.RuleArtifact.doesNotContainTag(java.lang.String,java.lang.String)#sentence.navigation = il contrassegno {0} {this, PARTITIVE_ARTICLE} non contiene {1}
bql.RuleArtifact.getDefinition()#sentence.navigation = {definizione} {this, PARTITIVE_ARTICLE}
bql.RuleArtifact.isUsingBOMClass(bql.BOMClass)#sentence.navigation = {this} sta usando {0}
bql.RuleArtifact.isUsingBOMClass(bql.BOMClass)#sentence.navigation.documentation = Restituisce regole che fanno riferimento a una data classe utilizzando un collegamento a un'istanza della classe o utilizzando la variabile automatica collegata alla classe. Si noti che la classe deve essere verbalizzata e che la corrispondenza avverrà solo con Business Artifacts.
bql.RuleArtifact.isNotUsingBOMClass(bql.BOMClass)#sentence.navigation = {this} non sta usando {0}
bql.RuleArtifact.isNotUsingBOMClass(bql.BOMClass)#sentence.navigation.documentation = Restituisce regole che non fanno riferimento a una data classe né utilizzando un collegamento a un'istanza della classe, né utilizzando la variabile automatica collegata alla classe. Si noti che la classe deve essere verbalizzata e che la corrispondenza avverrà solo con Business Artifacts.
bql.RuleArtifact.isUsingBOMMember(bql.BOMMember)#sentence.navigation = {this} sta usando {0}
bql.RuleArtifact.isUsingBOMMember(bql.BOMMember)#sentence.navigation.documentation = Restituisce regole che nel testo fanno riferimento a un dato membro. Si noti che il membro deve essere verbalizzato e che la corrispondenza avverrà  solo con Business Artifacts. 
bql.RuleArtifact.isNotUsingBOMMember(bql.BOMMember)#sentence.navigation = {this} non sta usando {0}
bql.RuleArtifact.isNotUsingBOMMember(bql.BOMMember)#sentence.navigation.documentation = Restituisce regole che nel testo non fanno riferimento a un dato membro. Si noti che il membro deve essere verbalizzato e che la corrispondenza avverrà  solo con Business Artifacts.
bql.RuleArtifact.isNeverApplicable()#sentence.navigation = {this} non è mai applicabile
bql.RuleArtifact.hasNoActions()#sentence.navigation = {this} non ha azioni
bql.RuleArtifact.mayEnableRule(java.lang.String)#sentence.navigation = {this} può abilitare {0, <a rule>}
bql.RuleArtifact.mayBeEnabledByRule(java.lang.String)#sentence.navigation = {this} può essere abilitata da {0, <a rule>}
bql.RuleArtifact.mayDisableRule(java.lang.String)#sentence.navigation = {this} può disabilitare {0, <a rule>}
bql.RuleArtifact.mayBeDisabledByRule(java.lang.String)#sentence.navigation = {this} può essere disabilitata da {0, <a rule>}

#
# Technical Rule
#
bql.TechnicalRule#label = regola tecnica
bql.TechnicalRule.setDefinition(java.lang.String)#sentence.action = assegna la definizione {this, PARTITIVE_ARTICLE} a {0}

# bql.Template
bql.Template#label = modello
bql.Template.getDefinition()#sentence.navigation = {definizione} {this, PARTITIVE_ARTICLE}

#
# Rule
#
bql.Rule#label = regola
bql.Rule.effectiveDate#sentence.navigation = {data effettiva} {this, PARTITIVE_ARTICLE}
bql.Rule.effectiveDate#sentence.action = assegna la data effettiva {this, PARTITIVE_ARTICLE} a {data effettiva}
bql.Rule.expirationDate#sentence.navigation = {data di scadenza} {this, PARTITIVE_ARTICLE}
bql.Rule.expirationDate#sentence.action = assegna la data di scadenza {this, PARTITIVE_ARTICLE} a {data di scadenza}
bql.Rule.status#sentence.navigation = {stato} {this, PARTITIVE_ARTICLE}
bql.Rule.status#sentence.action = assegna lo stato {this, PARTITIVE_ARTICLE} a {stato}

bqlExtension.Status#label = stato
bqlExtension.Status.new#instance.label = nuovo
bqlExtension.Status.deployable#instance.label = rilasciabile
bqlExtension.Status.defined#instance.label = definito
bqlExtension.Status.rejected#instance.label = rifiutato
bqlExtension.Status.validated#instance.label = validato

#
# Business Rule
#
bql.BusinessRule#label = regola aziendale
bql.BusinessRule.containsCategory(java.lang.String)#sentence.navigation = {this} usa la categoria {0}
bql.BusinessRule.doesNotContainCategory(java.lang.String)#sentence.navigation = {this} non usa la categoria {0}
bql.BusinessRule.addCategory(java.lang.String)#sentence.action = aggiungi la categoria {0} a {this}
bql.BusinessRule.removeCategory(java.lang.String)#sentence.action = rimuovi la categoria {0} da {this}
bql.BusinessRule.priority#sentence.navigation = {priorit?} {this, PARTITIVE_ARTICLE}
bql.BusinessRule.priority#sentence.action = assegna la priorità {this, PARTITIVE_ARTICLE} a {priorit?}

#
# Decision Table
#
bql.DecisionTable#label = tabella decisionale

#
# Decision Tree
#
bql.DecisionTree#label = struttura decisionale

#
# BRL Rule
#
bql.BRLRule#label = regola BRL

#
# Action Rule
#
bql.ActionRule#label = regola d'azione

#
# Function
#
bql.Function#label = funzione
bql.Function.getDefinition()#sentence.navigation = la definizione {this, PARTITIVE_ARTICLE}
bql.Function.setDefinition(java.lang.String)#sentence.action = assegna la definizione {this, PARTITIVE_ARTICLE} a {0}

#
# Rule Package
#
bql.RulePackage#label = pacchetto di regole
bql.RulePackage.getParentPackage()#sentence.navigation = {pacchetto padre} {this, PARTITIVE_ARTICLE}
bql.RulePackage.isInPackage(java.lang.String)#sentence.navigation = {this} è nel pacchetto {0}

#
# View
#
bql.AbstractQuery#label = interrogazione riepilogo
bql.SmartView#label = vista intelligente

#
# Ruleflow
#
bql.Ruleflow#label = flusso di regole
bql.Ruleflow.getInitialActions()#sentence.navigation = {azioni iniziali} {this, PARTITIVE_ARTICLE}
bql.Ruleflow.getFinalActions()#sentence.navigation = {azioni finali} {this, PARTITIVE_ARTICLE}
bql.Ruleflow.setInitialActions(java.lang.String)#sentence.action = assegna l'azione iniziale {this, PARTITIVE_ARTICLE} a {0}
bql.Ruleflow.setFinalActions(java.lang.String)#sentence.action = assegna l'azione finale {this, PARTITIVE_ARTICLE} a {0}
bql.Ruleflow.maySelectRule(java.lang.String)#sentence.navigation = {this} può selezionare {0, <a rule>}

#
# Variable Set
#
bql.VariableSet#label = insieme di variabili
bql.VariableSet.containsVariable(java.lang.String)#sentence.navigation = {this} contiene {0}
bql.VariableSet.doesNotContainVariable(java.lang.String)#sentence.navigation = {this} non contiene {0}

#
# Variable
#
bql.Variable#label = variabile
bql.Variable.getName()#sentence.navigation = {nome} {this, PARTITIVE_ARTICLE}
bql.Variable.getRulePackage()#sentence.navigation = {pacchetto di regole} {this, PARTITIVE_ARTICLE}
bql.Variable.isInPackage(java.lang.String)#sentence.navigation = {this} è nel pacchetto {0}

#
# Parameter
#
bql.Parameter#label = parametro
bql.Parameter.getName()#sentence.navigation = {nome} {this, PARTITIVE_ARTICLE}

#
# Rule Query
#
bql.RuleQuery#label = interrogazione
bql.RuleQuery.addMatch(bql.ProjectElement)#sentence.action = inserisci {0} come risultato della interrogazione
bql.RuleQuery.addMatch(bql.Parameter)#sentence.action = inserisci {0} come risultato della interrogazione
bql.RuleQuery.addMatch(bql.Variable)#sentence.action = inserisci {0} come risultato della interrogazione

#
# Scenario File
#
# bql.ScenarioFile#label = file scenario

#
# Scenario Suite
#
bql.ScenarioSuite#label = suite scenario
bql.ScenarioSuite.getTestBaseline()#sentence.navigation = {linea di base} da controllare per {this}
bql.ScenarioSuite.getTestExtractor()#sentence.navigation = {estrattore} da controllare per {this}
bql.ScenarioSuite.getEntryPoint()#sentence.navigation = {attivit? iniziale} {this, PARTITIVE_ARTICLE}

#
# Baseline
#
bql.Baseline#label = linea di base

#
# Extractor
#
bql.Extractor#label = estrattore

#
# EntryPoint
#
bql.EntryPoint#label = punto di ingresso

#
# Test Suite
#
bql.TestSuite#label = suite di test

#
# Simulation
#
bql.Simulation#label = simulazione

#
# Login
#
bql.Login#label = login
bql.Login.getLoginDate()#sentence.navigation = tempo del mio login

#
# Group
#
bql.Group#label = gruppo

# --------------------------------------
# - Added for Events support
# --------------------------------------

bql.ActionObject#label = oggetto azione

bql.DataConnection#label = connessione dati

bql.EventRuleArtifact#label = artefatto di regola evento

bql.EventObject#label = oggetto evento

bql.EventFlow#label = flusso di eventi

bql.EventRule#label = regola evento

bql.EventElement.containsEventTag(java.lang.String,java.lang.String)#sentence.navigation = l'etichetta {0} {this, PARTITIVE_ARTICLE} contiene {1}

bql.Resource#label = risorsa

bql.NamedConstant.getValueType()#sentence.navigation = {type} {this, PARTITIVE_ARTICLE}

bql.NamedConstant#label = costante nominata

bql.Action#label = azione

bql.Filter#label = filtro

bql.EventElement.addValueToEventTag(java.lang.String,java.lang.String)#sentence.action = imposta l'etichetta {1} a {0} per {this}

bql.Event#label = evento

bql.File#label = file

bql.Chart#label = grafico

bql.BusinessObject#label = oggetto mestiere

bql.EventRuleGroup#label = gruppo di regole evento

bql.EventArtifact.useNamedConstant(java.lang.String)#sentence.navigation = {this} usa la costante nominata {0}

bql.EventArtifact#label = regola/filtro di evento

bql.EventArtifact.useEvent(java.lang.String)#sentence.navigation = {this} usa l'evento {0}

bql.EventArtifact.getEventDefinition()#sentence.navigation = {definition} {this, PARTITIVE_ARTICLE}

bql.EventElement#label = elemento di evento

bql.EventArtifact.useBusinessObject(java.lang.String)#sentence.navigation = {this} usa l'oggetto mestiere {0}

bql.EventArtifact.useFilter(java.lang.String)#sentence.navigation = {this} usa il filtro {0}

bql.EventElement.doesNotContainEventTag(java.lang.String,java.lang.String)#sentence.navigation = l'etichetta {0} {this, PARTITIVE_ARTICLE} non contiene {1}

bql.NamedConstant.getValue()#sentence.navigation = {value} {this, PARTITIVE_ARTICLE}

bql.EventArtifact.useAction(java.lang.String)#sentence.navigation = {this} usa l'azione {0}

