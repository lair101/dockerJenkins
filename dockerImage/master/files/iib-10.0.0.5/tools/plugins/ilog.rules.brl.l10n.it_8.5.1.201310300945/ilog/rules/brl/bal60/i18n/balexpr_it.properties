# Licensed Materials - Property of IBM  
#      
# 5724-X98
# 5724-Y15
# 5655-V82
# 5724-Y00
# 5724-Y17
# 5655-V84
# 5724-Y01
# 5724-Y18
# 5724-Y02 	
# 5724-Y21 
# 5724-Y03 	
# 5724-Y22 	
# 5724-Y23 	
# 5655-V87
# 5725-B69
# 5724-U90
# 5655-Y17
# 5725-C52
# 
# 5655-Y31
#         
# © Copyright IBM Corp. 1987, 2012 All Rights Reserved
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.

# ----- BAL expression ----------------------------------------

# ----- all of the following / one of the following / none of the following -----------

<T-bool-expression>.<expression>.placeHolder.text = condizione
<T-bool-expression>.<expression>.emptyText = <seleziona una condizione>

<T-and>.text = tutte le seguenti condizioni sono vere : <and> [,]
<T-and>.documentation = Questo struttura permette di esaminare se tutte le condizioni incluse sono vere. \nLe condizioni incluse sono espressioni booleane introdotte dal carattere '-'.

<T-and>.<and>.toolTip = Aggiungi una Condizione

<T-or>.text = una delle seguenti condizioni è vera : <or> [,]
<T-or>.documentation = Questo struttura permette di esaminare se almeno una delle condizioni incluse è vera. \nLe condizioni incluse sono espressioni booleane introdotte dal carattere '-'.

<T-or>.<or>.toolTip = Aggiungi una condizione

<T-not>.text = nessuna delle seguenti condizioni è vera : <not> [,]
<T-not>.documentation = Questo costrutto permette di esaminare se tutte le condizioni incluse sono false. \nLe condizioni incluse sono espressioni booleane introdotte dal carattere '-'.

<T-not>.<not>.toolTip = Aggiungi una condizione


# -----there is at least one -------------------------------------

<T-exists-condition>.text = c'è almeno <target> <origin> <test>
# Ambiguity with <T-atleast-condition>.text
<T-exists-condition>.menuText = c'è almeno un
<T-exists-condition>.documentation = Determina se almeno un oggetto del tipo specificato esiste nell'insieme degli oggetti acceduti dal motore di regole in fase di esecuzione, o disponibili attraverso la struttura 'in'

<T-exists-condition>.<target>.verbalization.article = indefinite
<T-exists-condition>.<target>.verbalization.plural = false

# -----there is at most one -------------------------

<T-atmost1-condition>.text = c'è al massimo <target> <origin> <test>
<T-atmost1-condition>.documentation = Determina se esiste al massimo un oggetto del tipo specificato nell'insieme degli oggetti acceduti dal motore di regole in fase di esecuzione, o disponibili attraverso la struttura 'in'
# Ambiguity with <T-atmost-condition>.text
<T-atmost1-condition>.menuText = c'è al massimo un

<T-atmost1-condition>.<target>.verbalization.article = indefinite
<T-atmost1-condition>.<target>.verbalization.plural = false

# -----there are at least -------------------------

<T-atleast-condition>.text = ci sono almeno <number> <target> <origin> <test>
<T-atleast-condition>.documentation = Determina se il numero di oggetti del tipo specificato è maggiore o uguale ad uno specifico valore, nell'insieme di oggetti acceduti dal motore di regole in fase di esecuzione o disponibile attraverso la struttura 'in'

# -----there are at most -------------------------

<T-atmost-condition>.text = ci sono al massimo <number> <target> <origin> <test>
<T-atmost-condition>.documentation = Determina se il numero di oggetti del tipo specificato è minore o uguale ad uno specifico valore, nell'insieme di oggetti acceduti dal motore di regole in fase di esecuzione o disponibile attraverso la struttura 'in'

# -----there are more than -------------------------

<T-more-than-condition>.text = ci sono più di <number> <target> <origin> <test>
<T-more-than-condition>.documentation = Determina se il numero di oggetti del tipo specificato è maggiore di uno specifico valore, nell'insieme di oggetti acceduti dal motore di regole in fase di esecuzione o disponibile attraverso la struttura 'in'

# -----there are less than -------------------------

<T-less-than-condition>.text = ci sono meno di <number> <target> <origin> <test>
<T-less-than-condition>.documentation = Determina se il numero di oggetti del tipo specificato è minore di uno specifico valore, nell'insieme di oggetti acceduti dal motore di regole in fase di esecuzione o disponibile attraverso la struttura 'in'

# -----there is no -------------------------

<T-not-exist-condition>.text = non c'è <target> <origin> <test>
<T-not-exist-condition>.documentation = Determina se l'oggetto del tipo specificato non esiste nell'insieme di oggetti acceduti dal motore di regole in fase di esecuzione o disponibile attraverso la struttura 'in'

<T-not-exist-condition>.<target>.verbalization.article = indefinite
<T-not-exist-condition>.<target>.verbalization.plural = false

# -----there are x -------------------------

<T-exactly-condition>.text = ci sono <number> <target> <origin> <test>
<T-exactly-condition>.documentation = Determina se il numero di oggetti del tipo specificato è uguale ad uno specifico valore, nell'insieme di oggetti acceduti dal motore di regole in fase di esecuzione o disponibile attraverso la struttura 'in'

# -----there is one -------------------------

<T-exactly1-condition>.text = c'è <target> <origin> <test>
# Ambiguity with <T-exactly-condition>.text
<T-exactly1-condition>.menuText = c'è un
<T-exactly1-condition>.documentation = Determina se c'è esattamente un solo oggetto del tipo specificato che è acceduto dal motore di regole in fase di esecuzione e soddisfa la prova che può essere associato con questa struttura

<T-exactly1-condition>.<target>.verbalization.article = indefinite
<T-exactly1-condition>.<target>.verbalization.plural = false

# -----the number of -------------------------

<T-count-condition>.text = il numero <target> <origin> <test>
<T-count-condition>.documentation = Questa struttura ritorna il numero di oggetti del tipo specificato che sono acceduti dal motore di regola in fase di esecuzione e soddisfano la prova che possono essere associati con questa struttura

<T-count-condition>.<target>.verbalization.article = no
<T-count-condition>.<target>.verbalization.partitive = true

# -----rule name -------------------------

<T-rule-name>.text = il nome di questa regola
<T-rule-name>.text.partitive = del nome di questa regola
<T-rule-name>.documentation = Questa struttura si riferisce al nome della regola attualmente eseguita. Questa struttura è disponibile solamente nella parte di azione della regola.
