public void evaluate(MbMessageAssembly assembly) throws MbException {
    MbOutputTerminal out = getOutputTerminal("out");
    MbOutputTerminal alt = getOutputTerminal("alternate");

	try {
	    MbMessage message = assembly.getMessage();
	    // ----------------------------------------------------------
	    // Add user code below
	
	
	
	    // End of user code
	    // ----------------------------------------------------------
	} catch (MbException e) {
		// Re-throw to allow Broker handling of MbException
	    throw e;
	} catch (RuntimeException e) {
		// Re-throw to allow Broker handling of RuntimeException
	    throw e;
	} catch (Exception e) { 
		// Consider replacing Exception with type(s) thrown by user code
		// Example handling ensures all exceptions are re-thrown to be handled in the flow
		throw new MbUserException(this, "evaluate()", "","", e.toString(), null);
	}
        
    // Change following to propagate the message to the 'out' or 'alt' terminal
    out.propagate(assembly);
}