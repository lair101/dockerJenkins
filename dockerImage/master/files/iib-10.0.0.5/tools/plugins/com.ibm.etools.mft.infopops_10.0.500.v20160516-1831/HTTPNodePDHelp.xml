<?xml version="1.0" encoding="UTF-8"?>
<?NLS TYPE="org.eclipse.help.contexts"?>

<pdHelp xmlns="http://www.ibm.com/visualutils/pdhelpcontent"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ibm.com/visualutils/pdhelpcontent http://www.ibm.com/visualutils/pdhelpcontent">

	<pluginCategory id="com.ibm.etools.mft.ibmnodes">
	
        	
		<!--  HTTP Input NODE HELP -->	
	
	    <pageHelp id="ComIbmWSInput_basic">
	    	<title>Basic</title>
	    	<shortDescription>Settings for working with the HTTPInput node.</shortDescription>
            <moreDescription><p>Use the HTTPInput node to receive an HTTP message from an HTTP client for processing by a message flow.</p>			                               
            </moreDescription>
	    </pageHelp>
		
		<pageHelp id="ComIbmWSInput_advanced">
			<title>Advanced</title>
			<shortDescription>Advanced settings for the HTTPInput node</shortDescription>
		</pageHelp>
		
		<pageHelp id="ComIbmWSInput_errorHandling">
			<title>Error Handling</title>
			<shortDescription>Settings for error handling on the HTTPInput node</shortDescription>
		</pageHelp> 
		
		<pageHelp id="ComIbmWSInput_validation">
			<title>Validation</title>
			<shortDescription>Validation settings for the HTTPInput node</shortDescription>
			<moreDescription><p>Set validation properties on the HTTPInput node.</p>
			</moreDescription>
		</pageHelp>

        <pageHelp id="ComIbmWSInput_security">
			<title>Security</title>
			<shortDescription>Settings for working with security on the HTTPInput node</shortDescription>
		</pageHelp> 
		
		<!-- HTTP INPUT NODE - BASIC PAGE -->
		
		<fieldHelp id="ComIbmWSInput_basic_URLSpecifier">
			<title>Path Suffix for URL</title>
			<description><p>This property identifies the location from where web service requests are retrieved. Do not use the full URL. If the URL that you want is http://hostname[:port]/[path], specify either /path or /path fragment/* where * is a wildcard that you can use to mean match any.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_basic_useHTTPS">
			<title>Use HTTPS</title>
			<description><p>This property identifies whether the node is to accept secure HTTP. If the node is to accept secure HTTP, select the check box.</p></description>
		</fieldHelp>
		
		<!-- HTTP INPUT NODE - ADVANCED PAGE -->
		
		<fieldHelp id="ComIbmWSInput_advanced_setDestinationList">
			<title>Set destination list</title>
			<description><p>This property specifies whether to add the method binding name to the route to label destination list. If you select this check box, the method binding name is added so that you can use a RouteToLabel node in the message flow after the HTTPInput node.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_advanced_labelPrefix">
			<title>Label prefix</title>
			<description><p>The prefix to add to the method name when routing to label. Add a label prefix to avoid a clash of corresponding label nodes when you include multiple IBM Integration input nodes in the same message flow. By default, there is no label prefix, therefore the method name and label name are identical.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_advanced_parseQueryString">
			<title>Parse Query String</title>
			<description><p>This property causes any query string that is present with an incoming message to be parsed and decoded (according to http://tools.ietf.org/html/rfc3986) into the following location in the local environment as a series of name-value elements that match the names and values present in the query string: LocalEnvironment.HTTP.Input.QueryString</p>
			<p>For example, for this query string:</p>
			<p>?myParam1=my%22Value%221&amp;myParam2=my%22Value%222</p>
			<p>the following elements are placed into the local environment under the QueryString folder:</p>
			<p>myParam1 with a value of my"Value"1</p>
			<p>myParam2 with a value of my"Value"2</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_advanced_decompressInputMessage">
			<title>Decompress input message</title>
			<description><p>This property indicates whether an inbound HTTP request is decompressed or not. This property is used only if the integration server has been configured so that HTTP nodes use the embedded integration server HTTP listener.</p>
			<p>If this option is selected, and the HTTP header Content-Encoding field is "gzip" or "deflate", the input message is decompressed and propagated to the Out terminal, and the Content-Encoding field is removed.</p></description>
		</fieldHelp>
		
		<!-- HTTP INPUT NODE - INPUT MESSAGE PARSING PAGE -->
		
		<pageHelp id="ComIbmWSInput_default">
			<title>Input message parsing tab</title>
			<shortDescription>Determine how the node parses the incoming messages.</shortDescription>
		</pageHelp>
		
		<fieldHelp id="ComIbmWSInput_default_messageDomainProperty">
			<title>Message domain</title>
			<description><p>The domain that is used to parse the message. If the field is blank then the default is BLOB.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_default_messageSetProperty">
			<title>Message model</title>
			<description><p>The name or location of the message model schema file in which the message is defined. This list is populated with all available message model schema files for the Message domain that you have selected.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_default_messageTypeProperty">
			<title>Message</title>
			<description><p>The name or location of the message root within your message model schema file. This list is populated with all available messages that are defined in the Message model that you have selected.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_default_messageFormatProperty">
			<title>Physical format</title>
			<description><p>The name of the physical format of the message. If you are using the MRM or IDOC parser, select the physical format of the incoming message from the list. This list includes all the physical formats that you have defined for the selected message model. If you set the Message domain property to DataObject, you can set this property to XML or SAP ALE IDoc. Set this property to SAP ALE IDoc when you have to parse a bit stream from an external source and generate a message tree.</p></description>
		</fieldHelp>
		
		<!-- HTTP INPUT NODE - PARSER OPTIONS PAGE -->
		
		<pageHelp id="ComIbmWSInput_parserOptions">
			<title>Parser Options tab</title>
			<shortDescription>Determine the behavior of the XMLNSC parser.</shortDescription>
			<moreDescription>
				<p>Configure the following options to determine the behavior of the XMLNSC parser:</p>
				<ul>
					<li>Build tree using XML schema data types: Select this property to create syntax elements in the message tree with data types taken from the XML Schema. To enable this property, set the Validate property on the Validation tab to "Content" or "Content and Value".</li>
					<li>Use XMLNSC compact parser for XMLNS domain: Select this property to format the response message in XMLNSC for nodes that are connected to the output terminal when the input MQRFH2 header or Response Message Parsing properties Message Domain is XMLNS.</li>
					<li>Retain mixed content: Select this property to create elements in the message tree when the parser finds mixed text in a response message. If you clear the check box, mixed text is ignored and no elements are created.</li>
					<li>Retain comments: Select this property to create elements in the message tree when the parser finds comments in a response message. If you clear the check box, comments are ignored and no elements are created.</li>
					<li>Retain processing instructions: Select this property to create elements in the message tree when the parser finds processing instructions in a response message. If you clear the check box, processing instructions are ignored and no elements are created.</li>
					<li>Opaque elements: Add a list of elements in the response message that are to be opaquely parsed by the XMLNSC parser. Opaque parsing is performed only if validation is not enabled (that is, if the Validate property on the Validation tab is set to "None"); entries that are specified in Opaque Elements are ignored if validation is enabled. </li>
				</ul>
			</moreDescription>
			<topic href="../com.ibm.etools.mft.doc/ac76040_.htm">
				<label>Manipulating messages in the XMLNSC domain</label>
			</topic>
		</pageHelp>
		
		<fieldHelp id="ComIbmWSInput_parserOptions_validateTiming">
			<title>Parse timing</title>
			<description><p>This property controls when an input message is parsed. Valid values are On Demand, Immediate, and Complete.</p>
					<p>By default, this property is set to On Demand, which causes parsing of the message to be delayed. To cause the message to be parsed immediately, see Parsing on demand.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_parserOptions_parserXmlnscBuildTreeUsingXMLSchema">
			<title>Build tree using XML schema data types</title>
			<description><p>This property controls whether the XMLNSC parser creates syntax elements in the message tree with data types taken from the XML schema. You can select this property only if you set the Validate property on the Validation tab to Content or Content and Value.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_parserOptions_parserXmlnscUseForXmlnsDomain">
			<title>Use XMLNSC compact parser for XMLNS domain</title>
			<description><p>This property controls whether the XMLNSC Compact Parser is used for messages in the XMLNS Domain. If you set this property, the message data is displayed under XMLNSC in nodes that are connected to the output terminal when the input MQRFH2 header or the input message Parsing property Message domain is XMLNS.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_parserOptions_parserXmlnscMixedContentRetainMode">
			<title>Retain mixed content</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters mixed text in an input message. If you select the check box, elements are created for mixed text. If you clear the check box, mixed text is ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_parserOptions_parserXmlnscCommentsRetainMode">
			<title>Retain comments</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters comments in an input message. If you select the check box, elements are created for comments. If you clear the check box, comments are ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_parserOptions_parserXmlnscProcessingInstructionsRetainMode">
			<title>Retain processing instructions</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters processing instructions in an input message. If you select the check box, elements are created for processing instructions. If you clear the check box, processing instructions are ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_parserOptions_parserXmlnscOpaqueElements">
			<title>Opaque elements</title>
			<description><p>This property is used to specify a list of elements in the input message that are to be opaquely parsed by the XMLNSC parser. Opaque parsing is performed only if validation is not enabled (that is, if Validate is None); entries that are specified in Opaque Elements are ignored if validation is enabled.</p></description>
		</fieldHelp>
		
		<!-- HTTP INPUT NODE - Error Handling PAGE -->
		
		<fieldHelp id="ComIbmWSInput_errorHandling_timeoutForClient">
			<title>Maximum client wait time(sec)</title>
			<description><p>The length of time, in seconds, for which the TCP/IP listener that received the input message from the web service client waits for a response from the HTTPReply node in the message flow. The valid range is zero (which means a short wait) through (231)-1. If a response is received within this time, the listener propagates the response to the client. If a response is not received in this time, a fault message is generated indicating that the timeout has expired. This fault message is either sent by the listener or timeout terminal processing.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_errorHandling_faultFormat">
			<title>Fault format</title>
			<description><p>The format of any HTTP errors that are returned to the client. Valid values are "SOAP 1.1", "SOAP 1.2", and "HTML".</p></description>
		</fieldHelp>
		
		<!-- HTTP INPUT NODE - Validation PAGE -->
		
		<fieldHelp id="ComIbmWSInput_validation_validateMaster">
			<title>Validate</title>
			<description><p>This property controls whether validation takes place. Valid values are None, Content and Value, and Content.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_validation_validateFailureAction">
			<title>Failure action</title>
			<description><p>This property controls what happens if validation fails. You can set this property only if you set Validate to "Content" or "Content and Value". Valid values are "User Trace", "Local Error Log", "Exception", and "Exception List".</p></description>
		</fieldHelp>
		
		<!-- HTTP INPUT NODE - Security PAGE -->
		
		<fieldHelp id="ComIbmWSInput_security_identityType">
			<title>Identity token type</title>
			<description><p>This property specifies the type of identity token that is present in the incoming message. Valid values are:</p>
			<ul><li>Transport Default</li>
			<li>Username</li>
			<li>Username + Password</li>
			<li>SAML Assertion</li>
			<li>X.509 Certificate</li>
			</ul><p>If this property is not specified, the identity is retrieved from the Basic-Auth transport header and the type is set to "Username + Password".</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_security_identityTokenLocation">
			<title>Identity token location</title>
			<description><p>This property specifies where, in the message, the identity can be found. The location is specified as an ESQL field reference, an XPath expression, or a string literal. If you use a string literal, it must be enclosed in single quotation marks and must not contain a period (.), If this property is not specified, the identity is retrieved from the Authorization Transport headers.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_security_identityPasswordLocation">
			<title>Identity password location</title>
			<description><p>This property specifies where, in the message, the password can be found. The location is specified as an ESQL field reference, an XPath expression, or a string literal. If you use a string literal, it must be enclosed in single quotation marks and must not contain a period (.), If you do not specify a value for this property, the password is retrieved from the Authorization Transport headers. You can set this property only if the Identity type is set to "Username + Password".</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_security_identityIssuedByLocation">
			<title>Identity issuedBy location</title>
			<description><p>This property specifies a string or path expression that describes the issuer of the identity. The location is specified as an ESQL field reference, an XPath expression, or a string literal. If you use a string literal, it must be enclosed in single quotation marks and must not contain a period (.), The value specifies the Issuer that is passed to a WS-Trust v1.3 STS provider.</p>
			<p>If you do not specify a value for this property, the default value is the name of the User Agent, or, if this name is not set, the string HTTP.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSInput_security_catchSecurityExceptions">
			<title>Treat security exceptions as normal exceptions</title>
			<description><p>This property specifies whether to treat security exceptions (such as Access Denied) as normal exceptions, and propagate them to the Failure terminal (if wired). This option is turned off by default, which ensures that security exceptions cause the message to be backed out even if the Failure terminal is wired.</p></description>
		</fieldHelp>
		
		<!-- HTTP INPUT  NODE - MONITORING PAGE -->
		 <pageHelp id="ComIbmWSInput_monitoring">
			<title>Monitoring tab</title>
			<shortDescription>Display events that you have defined for the node.</shortDescription>
		</pageHelp> 

        <fieldHelp id="ComIbmWSInput_monitoring_monitorEvents">
			<title>Events</title>
			<description>
				<p>Events that you have defined for the node are displayed on this tab. By default, no monitoring events are defined 
                   on any node in a message flow. Use:</p>
                   <ul> 
                       <li>Add to create</li>
                       <li>Edit to change</li>
                       <li>Delete to delete</li>
                   </ul>
                  <p> monitoring events for the node</p>
                <p>You can enable and disable events that are shown here by selecting or clearing the Enabled check box.</p> 
            </description>
            <topic href="../com.ibm.etools.mft.doc/ac60381_.htm">
				<label>Configuring monitoring event sources using monitoring properties</label>
			</topic>
		</fieldHelp>
		
		<!--  HTTP REQUEST NODE HELP -->	
	
	    <pageHelp id="ComIbmWSRequest_basic">
	    	<title>Basic</title>
	    	<shortDescription>Settings for working with the HTTPRequest node.</shortDescription>
            <moreDescription><p>Use the HTTPRequest node to interact with a web service.</p>		                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmWSRequest_http">
	    	<title>HTTP Settings</title>
	    	<shortDescription>HTTP settings for the HTTPRequest node</shortDescription>
            <moreDescription><p>Set HTTP properties on the HTTPRequest node.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmWSRequest_ssl">
	    	<title>SSL</title>
	    	<shortDescription>SSL settings for the HTTPRequest node</shortDescription>
            <moreDescription><p>Set SSL properties on the HTTPRequest node.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmWSRequest_error">
	    	<title>Error Handling</title>
	    	<shortDescription>Settings for working with error handling on the HTTPRequest node</shortDescription>
            <moreDescription><p>Set error handling properties on the HTTPRequest node.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmWSRequest_advanced">
	    	<title>Adavanced</title>
	    	<shortDescription>Advanced settings for the HTTPRequest node</shortDescription>
            <moreDescription><p>Set advanced properties on the HTTPRequest node.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmWSRequest_validation">
	    	<title>Validation</title>
	    	<shortDescription>Validation settings for the HTTPRequest node</shortDescription>
            <moreDescription><p>Set validation properties on the HTTPRequest node.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <!-- HTTP REQUEST NODE - BASIC PAGE -->
		
		<fieldHelp id="ComIbmWSRequest_basic_URLSpecifier">
			<title>Web Service URL</title>
			<description><p>The URL for the web service. You must provide this in the form http://hostname[:port]/[path] where:</p>
    			<ul>
    				<li>http://hostname must be specified.</li>
    				<li>port has a default of 80. If you specify a value, you must include the : before the port number.</li>
   				<li>path has a default of /. If you specify a value, you must include the / before the path.</li>
    			</ul>
			</description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_basic_timeoutForServer">
			<title>Request Timeout (sec)</title>
			<description><p>The time in seconds that the node waits for a response from the web service. The valid range is 1 through (2^31)-1. You cannot enter a value that represents an unlimited wait. The timeout might take up to one second longer than the specified value.</p></description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - HTTP SETTINGS PAGE -->
		
		<fieldHelp id="ComIbmWSRequest_http_httpProxyLocation">
			<title>HTTP(S) proxy location</title>
			<description><p>The proxy server to which requests are sent. This value must be in the form hostname:port.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_http_followRedirection">
			<title>Follow HTTP(S) redirection</title>
			<description><p>If you select the check box, redirections are followed. If you clear this check box, redirections are not followed.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_http_httpMethod">
			<title>HTTP method</title>
			<description><p>The HTTP method. Valid values are POST, GET, PUT, DELETE, and HEAD. By default, the HTTPRequest node uses the HTTP POST method when it connects to the remote web server. HEAD is used to determine whether a service is available - for example, by a Network Dispatcher trying to work out which servers are available - and sends back the correct headers (including content-length) but no body data. </p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_http_httpVersion">
			<title>HTTP version</title>
			<description><p>The HTTP version to use for requests. Valid values are 1.0 and 1.1.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_http_enableKeepAlive">
			<title>Enable HTTP/1.1 keep-alive</title>
			<description><p>Use HTTP/1.1 Keep-Alive.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_http_requestCompressionType">
			<title>Use compression</title>
			<description><p>This property controls whether the content of the HTTP request is compressed. You can choose a value from none, gzip, zlib (deflate), and deflate. If the request is compressed, the Content-Encoding header is set to indicate that the content is compressed.</p>
				<p>zlib (deflate) represents RFC 1950 + RFC 1951 combined.</p>	
				<p>deflate represents RFC 1951 only.</p>
			</description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - HTTP SSL PAGE -->
		
		<fieldHelp id="ComIbmWSRequest_ssl_protocol">
			<title>Protocol</title>
			<description><p>The SSL protocol to use when making an HTTPS request</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_ssl_allowedCiphers">
			<title>Allowed SSL ciphers</title>
			<description><p>A comma-separated list of ciphers to use when making an SSL request. The default value of an empty string means use all available ciphers.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_ssl_hostnameChecking">
			<title>Enable SSL Certifcate Host Name Checking</title>
			<description><p>This property specifies whether the host name of the server that is receiving the request must match the host name in the SSL certificate.</p></description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - INPUT MESSAGE PARSING PAGE -->
		
		<pageHelp id="ComIbmWSRequest_default">
			<title>Input message parsing tab</title>
			<shortDescription>Determine how the node parses the response messages.</shortDescription>
		</pageHelp>
		
		<fieldHelp id="ComIbmWSRequest_default_messageDomainProperty">
			<title>Message domain</title>
			<description><p>The domain that is used to parse the message. If the field is blank then the default is BLOB.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_default_messageSetProperty">
			<title>Message model</title>
			<description><p>The name or location of the message model schema file in which the message is defined. This list is populated with all available message model schema files for the Message domain that you have selected.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_default_messageTypeProperty">
			<title>Message</title>
			<description><p>The name or location of the message root within your message model schema file. This list is populated with all available messages that are defined in the Message model that you have selected.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_default_messageFormatProperty">
			<title>Physical format</title>
			<description><p>The name of the physical format of the message. If you are using the MRM or IDOC parser, select the physical format of the incoming message from the list. This list includes all the physical formats that you have defined for the selected message model. If you set the Message domain property to DataObject, you can set this property to XML or SAP ALE IDoc. Set this property to SAP ALE IDoc when you have to parse a bit stream from an external source and generate a message tree.</p></description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - PARSER OPTIONS PAGE -->
		
		<pageHelp id="ComIbmWSRequest_parserOptions">
			<title>Parser Options tab</title>
			<shortDescription>Determine the behavior of the XMLNSC parser.</shortDescription>
			<moreDescription>
				<p>Configure the following options to determine the behavior of the XMLNSC parser:</p>
				<ul>
					<li>Build tree using XML schema data types: Select this property to create syntax elements in the message tree with data types taken from the XML Schema. To enable this property, set the Validate property on the Validation tab to "Content" or "Content and Value".</li>
					<li>Use XMLNSC compact parser for XMLNS domain: Select this property to format the response message in XMLNSC for nodes that are connected to the output terminal when the input MQRFH2 header or Response Message Parsing properties Message Domain is XMLNS.</li>
					<li>Retain mixed content: Select this property to create elements in the message tree when the parser finds mixed text in a response message. If you clear the check box, mixed text is ignored and no elements are created.</li>
					<li>Retain comments: Select this property to create elements in the message tree when the parser finds comments in a response message. If you clear the check box, comments are ignored and no elements are created.</li>
					<li>Retain processing instructions: Select this property to create elements in the message tree when the parser finds processing instructions in a response message. If you clear the check box, processing instructions are ignored and no elements are created.</li>
					<li>Opaque elements: Add a list of elements in the response message that are to be opaquely parsed by the XMLNSC parser. Opaque parsing is performed only if validation is not enabled (that is, if the Validate property on the Validation tab is set to "None"); entries that are specified in Opaque Elements are ignored if validation is enabled. </li>
				</ul>
			</moreDescription>
			<topic href="../com.ibm.etools.mft.doc/ac76040_.htm">
				<label>Manipulating messages in the XMLNSC domain</label>
			</topic>
		</pageHelp>
		
		<fieldHelp id="ComIbmWSRequest_parserOptions_validateTiming">
			<title>Parse timing</title>
			<description><p>This property controls when an input message is parsed. Valid values are On Demand, Immediate, and Complete.</p>
					<p>By default, this property is set to On Demand, which causes parsing of the message to be delayed. To cause the message to be parsed immediately, see Parsing on demand.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_parserOptions_parserXmlnscBuildTreeUsingXMLSchema">
			<title>Build tree using XML schema data types</title>
			<description><p>This property controls whether the XMLNSC parser creates syntax elements in the message tree with data types taken from the XML schema. You can select this property only if you set the Validate property on the Validation tab to Content or Content and Value.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_parserOptions_parserXmlnscUseForXmlnsDomain">
			<title>Use XMLNSC compact parser for XMLNS domain</title>
			<description><p>This property controls whether the XMLNSC Compact Parser is used for messages in the XMLNS Domain. If you set this property, the message data is displayed under XMLNSC in nodes that are connected to the output terminal when the input MQRFH2 header or the input message Parsing property Message domain is XMLNS.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_parserOptions_parserXmlnscMixedContentRetainMode">
			<title>Retain mixed content</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters mixed text in an input message. If you select the check box, elements are created for mixed text. If you clear the check box, mixed text is ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_parserOptions_parserXmlnscCommentsRetainMode">
			<title>Retain comments</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters comments in an input message. If you select the check box, elements are created for comments. If you clear the check box, comments are ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_parserOptions_parserXmlnscProcessingInstructionsRetainMode">
			<title>Retain processing instructions</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters processing instructions in an input message. If you select the check box, elements are created for processing instructions. If you clear the check box, processing instructions are ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_parserOptions_parserXmlnscOpaqueElements">
			<title>Opaque elements</title>
			<description><p>This property is used to specify a list of elements in the input message that are to be opaquely parsed by the XMLNSC parser. Opaque parsing is performed only if validation is not enabled (that is, if Validate is None); entries that are specified in Opaque Elements are ignored if validation is enabled.</p></description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - Error Handling PAGE -->
		
		<fieldHelp id="ComIbmWSRequest_error_replaceInputMsgWithHTTPError">
			<title>Replace input with error</title>
			<description><p>If you select this check box, the input message content is replaced by the error message content. If you clear this check box, you must specify Error message location.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_error_errorMsgLocationInTree">
			<title>Error message location</title>
			<description><p>The start location at which the parsed elements from the web service error bit stream are stored. This property takes the form of an ESQL field reference.</p></description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - Adavanced PAGE -->
		
		<fieldHelp id="ComIbmWSRequest_advanced_useWholeInputMsgAsRequest">
			<title>Use whole input message as request</title>
			<description><p>If you select this check box, the whole input message body is to be passed to the web service. If you clear this check box, you must select Request message location in tree.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_advanced_requestMsgLocationInTree">
			<title>Request message location in tree*</title>
			<description><p>The start location from which the bit stream is created for sending to the web service. This property takes the form of an ESQL field reference.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_advanced_replaceInputMsgWithWSResponse">
			<title>Replace input message with web-service response</title>
			<description><p>	If you select this check box, the web service response message replaces the copy of the input message as the content of the output message that is created. If you clear this check box, you must select Response message location in tree.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_advanced_responseMsgLocationInTree">
			<title>Response message location in tree*</title>
			<description><p>The start location at which the parsed elements from the web service response bit stream are stored. This property takes the form of an ESQL field reference.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_advanced_generateDefaultHttpHeaders">
			<title>Generate default HTTP headers from input</title>
			<description><p>If you select this check box, an HTTPRequestHeader is generated. If you clear this check box, a valid HTTPRequestHeader must exist in the input message.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_advanced_acceptCompressedResponses">
			<title>Accept compressed responses by default</title>
			<description><p>This property indicates whether the request node handles compressed responses by default. If the request header does not contain an Accept-Encoding header and this option is selected, the node sets the Accept-Encoding header to "gzip, deflate", and any compressed response that is received is decompressed by the node.</p>
				<p>If the message propagated to the Request node includes an Accept-Encoding header, the message flow or client application should handle any compressed response. Therefore selecting this option has no effect in that case.</p></description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - Validation PAGE -->
		
		<fieldHelp id="ComIbmWSRequest_validation_validateMaster">
			<title>Validate</title>
			<description><p>This property controls whether validation takes place. Valid values are None, Content and Value, Content, and Inherit.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSRequest_validation_validateFailureAction">
			<title>Failure action</title>
			<description><p>Events that you have defined for the node are displayed on this tab. By default, no monitoring events are defined on any node in a message flow. Use Add, Edit, and Delete to create, change or delete monitoring events for the node.</p>
				<p>You can enable and disable events that are shown here by selecting or clearing the Enabled check box.</p></description>
		</fieldHelp>
		
		<!-- HTTP REQUEST NODE - MONITORING PAGE -->
		<pageHelp id="ComIbmWSRequest_monitoring">
			<title>Monitoring tab</title>
			<shortDescription>Display events that you have defined for the node.</shortDescription>
		</pageHelp> 

        <fieldHelp id="ComIbmWSRequest_monitoring_monitorEvents">
			<title>Events</title>
			<description>
				<p>Events that you have defined for the node are displayed on this tab. By default, no monitoring events are defined 
                   on any node in a message flow. Use:</p>
                   <ul> 
                       <li>Add to create</li>
                       <li>Edit to change</li>
                       <li>Delete to delete</li>
                   </ul>
                  <p> monitoring events for the node</p>
                <p>You can enable and disable events that are shown here by selecting or clearing the Enabled check box.</p> 
            </description>
            <topic href="../com.ibm.etools.mft.doc/ac60381_.htm">
				<label>Configuring monitoring event sources using monitoring properties</label>
			</topic>
		</fieldHelp>
		
		<!--  HTTP REPLY NODE HELP -->	
	
	    <pageHelp id="ComIbmWSReply_basic">
	    	<title>Basic</title>
	    	<shortDescription>Settings for working with the HTTPReply node.</shortDescription>
            <moreDescription><p>Use the HTTPReply node to return a response from the message flow to an HTTP client. This node generates the response to an HTTP client from which the input message was received by the HTTPInput node, and waits for confirmation that it has been sent.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmWSReply_validation">
	    	<title>Validation</title>
	    	<shortDescription>Validation settings for the HTTPReply node</shortDescription>
            <moreDescription><p>Set validation properties on the HTTPReply node.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <!-- HTTP REPLY NODE - BASIC PAGE -->
		
		<fieldHelp id="ComIbmWSReply_basic_ignoreTransportFailures">
			<title>Ignore transport failures</title>
			<description><p>Select Ignore transport failures if you want transport-related failures to be ignored (for example, if the client is disconnected). If you clear the check box, and a transport-related error occurs, the input message is propagated to the Failure terminal. If you clear the check box, you must supply a value for Reply send timeout (sec).</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSReply_basic_timeoutForReply">
			<title>Reply send timeout(sec)</title>
			<description><p>Set the Reply send timeout (sec) value if you are not ignoring transport failures. This property specifies the length of time, in seconds, that the node waits for an acknowledgment that the client has received the reply. If the acknowledgment is received within this time, the input message is propagated through the Out terminal to the rest of the message flow, if it is connected. If an acknowledgment is not received within this time, the input message is propagated through the Failure terminal, if it is connected. If the Failure terminal is not connected, and an acknowledgment is not received in time, an exception is generated.</p>
				<p>The valid range is zero (which means an indefinite wait) to (2^31)-1. This property is valid only if Ignore transport failures is cleared. </p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSReply_basic_generateDefaultHttpHeaders">
			<title>Generate default HTTP headers from reply or response</title>
			<description><p>Select Generate default HTTP headers from reply or response if you want the default Web service headers to be created using values from the HTTPReplyHeader or the HTTPResponseHeader. If the appropriate header is not present in the input message, default values are used.</p>
				<p>The node always includes, in the HTTPReplyHeader, a Content-Length header, which is set to the correct calculated value, even if this header was not included in the original request.</p></description>
		</fieldHelp>
		
		<!-- HTTP REPLY NODE - Validation PAGE -->
		
		<fieldHelp id="ComIbmWSReply_validation_validateMaster">
			<title>Validate</title>
			<description><p>This property controls whether validation takes place. Valid values are None, Content and Value, Content, and Inherit.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmWSReply_validation_validateFailureAction">
			<title>Failure action</title>
			<description><p>This property controls what happens if validation fails. You can set this property only if you set Validate to Content or Content and Value. Valid values are User Trace, Local Error Log, Exception, and Exception List. </p></description>
		</fieldHelp>
		
		<!-- HTTP REPLY NODE - MONITORING PAGE -->
		<pageHelp id="ComIbmWSReply_monitoring">
			<title>Monitoring tab</title>
			<shortDescription>Display events that you have defined for the node.</shortDescription>
		</pageHelp> 

        <fieldHelp id="ComIbmWSReply_monitoring_monitorEvents">
			<title>Events</title>
			<description>
				<p>Events that you have defined for the node are displayed on this tab. By default, no monitoring events are defined 
                   on any node in a message flow. Use:</p>
                   <ul> 
                       <li>Add to create</li>
                       <li>Edit to change</li>
                       <li>Delete to delete</li>
                   </ul>
                  <p> monitoring events for the node</p>
                <p>You can enable and disable events that are shown here by selecting or clearing the Enabled check box.</p> 
            </description>
            <topic href="../com.ibm.etools.mft.doc/ac60381_.htm">
				<label>Configuring monitoring event sources using monitoring properties</label>
			</topic>
		</fieldHelp>
		
		<!--  HTTP HEADER NODE HELP -->	
	
	    <pageHelp id="ComIbmHTTPHeader_HTTPInputHeader">
	    	<title>HTTPInput</title>
	    	<shortDescription>Settings for working with the HTTPHeader node.</shortDescription>
            <moreDescription><p>Use the HTTPHeader node to add, modify, or delete HTTP headers such as HTTPInput, HTTPResponse, HTTPRequest and HTTPReply. </p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmHTTPHeader_HTTPResponseHeader">
	    	<title>HTTPResponse</title>
	    	<shortDescription>Set HTTPResponse properties with the HTTPHeader node</shortDescription>
            <moreDescription><p>Use the HTTPHeader node to add, modify, or delete HTTPResponse headers.</p>			                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmHTTPHeader_HTTPRequestHeader">
	    	<title>HTTPRequest</title>
	    	<shortDescription>Set HTTPRequest properties with the HTTPHeader node</shortDescription>
            <moreDescription><p>Use the HTTPHeader node to add, modify, or delete HTTPRequest headers.</p>                 
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmHTTPHeader_HTTPReplyHeader">
	    	<title>HTTPReply</title>
	    	<shortDescription>Set HTTPReply properties with the HTTPHeader node</shortDescription>
            <moreDescription><p>Use the HTTPHeader node to add, modify, or delete HTTPReply headers.</p>               
            </moreDescription>
	    </pageHelp>
	    
		<fieldHelp id="ComIbmHTTPHeader_HTTPRequestHeader_httpRequestClearIncoming">
			<title>Clear incoming values</title>
			<description><p>This option, which is enabled only if you choose Modify header, removes all property names and associated values from the incoming message if present.</p>
		</description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPHeader_HTTPRequestHeader_nameValue4RequestHeader">
			<title>HTTPRequest Header</title>
			<description><p>This field is enabled only if you chose Add header or Modify header for the HTTPRequest Header Options. The screen has no predefined properties; you use it to create custom properties and values. Use the property table to add new properties, or modify or delete existing properties, for the header. There is no limit to the number of properties. Each property must have a name and a type qualifier. The type qualifier can be Value, XPath, or Delete.</p>
				<ul>
				<li><b>Value</b>: Enter a new valid value for the selected property. A null value or empty string is also considered as a valid value.</li> 
				<li><b>XPath</b>: Specify a valid XPath expression. IBM Integration Bus supports XPath definitions that start with an XPath variable such as $Root or $LocalEnvironment. Only the first occurrence is returned if there are multiple values for the XPath expression. (Examples of valid XPath expressions are: $LocalEnvironment/Host, and $Root/HTTPRequest/Content-Type).</li> 
				<li><b>Delete</b>: Specify the property to be deleted from the incoming message. The value associated with the selected property is also deleted.</li>
				</ul> 
		</description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPHeader_HTTPReplyHeader_httpReplyClearIncoming">
			<title>Clear incoming values</title>
			<description><p>This option, which is enabled only if you choose Modify header, removes all property names and associated values from the incoming message if present.</p>
		</description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPHeader_HTTPReplyHeader_nameValue4ReplyHeader">
			<title>HTTPReply Header</title>
		<description><p>This field is enabled only if you chose Add header or Modify header for HTTPRequest Header Options. The screen has no predefined properties; you use it to create custom properties and values. Use the property table to add new properties, or modify or delete existing properties, for the header. There is no limit to the number of properties. Each property must have a name and a type qualifier. The type qualifier can be Value, XPath, or Delete.</p>
			<ul>
			<li><b>Value</b>: Enter a new valid value for the selected property. A null value or empty string is also considered as a valid value.</li>
			<li><b>XPath</b>: Specify a valid XPath expression. IBM Integration Bus supports XPath definitions that start with an XPath variable such as $Root or $LocalEnvironment. Only the first occurrence is returned if there are multiple values for the XPath expression. (Examples of valid XPath expressions are: $LocalEnvironment/Host, and $Root/HTTPRequest/Content-Type).</li>
			<li><b>Delete</b>: Specify the property to be deleted from the incoming message. The value associated with the selected property is also deleted.</li>
			</ul> 
		</description>
		</fieldHelp>
		
		<!-- HTTP HEADER NODE - MONITORING PAGE -->
		<pageHelp id="ComIbmHTTPHeader_monitoring">
			<title>Monitoring tab</title>
			<shortDescription>Display events that you have defined for the node.</shortDescription>
		</pageHelp> 

        <fieldHelp id="ComIbmHTTPHeader_monitoring_monitorEvents">
			<title>Events</title>
			<description>
				<p>Events that you have defined for the node are displayed on this tab. By default, no monitoring events are defined 
                   on any node in a message flow. Use:</p>
                   <ul> 
                       <li>Add to create</li>
                       <li>Edit to change</li>
                       <li>Delete to delete</li>
                   </ul>
                  <p> monitoring events for the node</p>
                <p>You can enable and disable events that are shown here by selecting or clearing the Enabled check box.</p> 
            </description>
            <topic href="../com.ibm.etools.mft.doc/ac60381_.htm">
				<label>Configuring monitoring event sources using monitoring properties</label>
			</topic>
		</fieldHelp>
			    
	    <!--  HTTP ASYNC REQUEST NODE HELP -->	
	
	    <pageHelp id="ComIbmHTTPAsyncRequest_basic">
	    	<title>Basic</title>
	    	<shortDescription>Settings for working with the HTTPAsyncRequest node.</shortDescription>
            <moreDescription><p>Use the HTTPAsyncRequest node with the HTTPAsyncResponse node to construct a pair of message flows that interact with a Web service asynchronously.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmHTTPAsyncRequest_http">
	    	<title>HTTP Settings</title>
	    	<shortDescription>HTTP settings for the HTTPAsyncRequest node</shortDescription>
            <moreDescription><p>Set HTTP properties on the HTTPAsyncRequest node.</p>
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmHTTPAsyncRequest_ssl">
	    	<title>SSL</title>
	    	<shortDescription>SSL settings for the HTTPAsyncRequest node</shortDescription>
            <moreDescription><p>Set SSL properties on the HTTPAsyncRequest node.</p>
            </moreDescription>
	    </pageHelp>
	       
	    <pageHelp id="ComIbmHTTPAsyncRequest_advanced">
	    	<title>Advanced</title>
	    	<shortDescription>Advanced settings for the HTTPAsyncRequest node.</shortDescription>
            <moreDescription><p>Set advanced properties on the HTTPAsyncRequest node.</p>                  
            </moreDescription>
	    </pageHelp>
	    
	    <!-- HTTP ASYNC REQUEST NODE - BASIC PAGE -->
	    
	    <fieldHelp id="ComIbmHTTPAsyncRequest_basic_asyncResponseCorrelator">
			<title>Unique identifier</title>
			<description><p>This property is the unique identifier that links a pair of HTTPAsyncRequest and HTTPAsyncResponse nodes. This identifier is used as a unique URL fragment to identify incoming response messages for the HTTPAsyncResponse node.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_basic_URLSpecifier">
			<title>Web Service URL</title>
			<description><p>The URL for the web service. You must provide this in the form http://hostname[:port]/[path] where:</p>
				<ul>
				<li>http://hostname must be specified.</li>
    			<li>port has a default of 80. If you specify a value, you must include the : before the port number.</li>
    			<li>path has a default of /. If you specify a value, you must include the / before the path.</li>
    			</ul>
			</description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_basic_timeoutForServer">
			<title>Request timeout (sec)</title>
			<description><p>The time in seconds that the node waits for a response from the web service. The valid range is 1 through (2^31)-1. You cannot enter a value that represents an unlimited wait. </p></description>
		</fieldHelp>
		
		<!-- HTTP ASYNC REQUEST NODE - HTTP SETTINGS PAGE -->
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_http_httpProxyLocation">
			<title>HTTP(S) proxy location</title>
			<description><p>The proxy server to which requests are sent. This value must be in the form hostname:port.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_http_httpMethod">
			<title>HTTP method</title>
			<description><p>The HTTP method. Valid values are POST, GET, PUT, DELETE, and HEAD. By default, the HTTPRequest node uses the HTTP POST method when it connects to the remote web server. HEAD is used to determine whether a service is available - for example, by a Network Dispatcher trying to work out which servers are available - and sends back the correct headers (including content-length) but no body data.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_http_requestCompressionType">
			<title>Use compression</title>
			<description><p>This property controls whether the content of the HTTP request is compressed. You can choose a value from none, gzip, zlib (deflate), and deflate. If the request is compressed, the Content-Encoding header is set to indicate that the content is compressed.</p>
				<p>zlib (deflate) represents RFC 1950 + RFC 1951 combined.</p>
				<p>deflate represents RFC 1951 only.</p></description>
		</fieldHelp>
		
		<!-- HTTP ASYNC REQUEST NODE - SSL PAGE -->
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_ssl_protocol">
			<title>Protocol</title>
			<description><p>Specify the SSLProtocol property to use when making an HTTPS request. Both ends of an SSL connection must agree on the protocol to use. Therefore, the selected protocol must be one that the remote server can accept. The following options are available:</p>
			<ul>
			<li><b>SSL</b>: This option is the default. This option tries to connect using the SSLv3 protocol first, but enables the handshake to fall back to the SSLv2 protocol where the SSLv2 protocol is supported by the underlying JSSE provider.</li>
			<li><b>SSLv3</b>: This option tries to connect with the SSLv3 protocol only. Fallback to SSLv2 is not possible.</li>
			<li><b>TLS</b>: This option tries to connect with the TLS protocol only. Fallback to SSLv3 or SSLv2 is not possible.</li>
			</ul>
		</description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_ssl_allowedCiphers">
			<title>Allowed SSL ciphers</title>
			<description><p>A comma-separated list of ciphers to use when making an SSL request.</p>
			<p>Use this setting to specify a single cipher (such as SSL_RSA_FIPS_WITH_3DES_EDE_CBC_SHA) or a list of ciphers that are the only ones used by the connection. This set of ciphers must include one or more that are accepted by the remote server. A comma is used as a separator between the ciphers.</p>
			<p>The default value is an empty string, which enables the node to use any, or all, of the available ciphers during the SSL connection handshake. This method gives the greatest scope for making a successful SSL connection.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_ssl_hostnameChecking">
			<title>Enable SSL Certificate Host Name Checking</title>
			<description><p>This property specifies whether the host name of the server that is receiving the request must match the host name in the SSL certificate.</p></description>
		</fieldHelp>
		
		<!-- HTTP ASYNC REQUEST NODE - Advanced PAGE -->
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_advanced_generateDefaultHttpHeaders">
			<title>Generate default HTTP headers from input</title>
			<description><p>If you select this check box, an HTTPRequestHeader is generated. If you clear this check box, a valid HTTPRequestHeader must exist in the input message.</p>
					<p>To control the contents of the HTTPRequestHeader that is included in the request message, include a Compute node that adds an HTTPRequestHeader to the input message before this HTTPAsyncRequest node in the message flow, and clear this check box.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncRequest_advanced_acceptCompressedResponses">
			<title>Accept compressed responses by default</title>
			<description><p>This property indicates whether the request node handles compressed responses by default. If the request header does not contain an Accept-Encoding header and this option is selected, the node sets the Accept-Encoding header to "gzip, deflate", and any compressed response that is received is decompressed by the node.</p>
			<p>If the message propagated to the Request node includes an Accept-Encoding header, the message flow or client application should handle any compressed response. Therefore selecting this option has no effect in that case.</p></description>
		</fieldHelp>
		
		<!-- HTTP ASYNC REQUEST NODE - MONITORING PAGE -->
		<pageHelp id="ComIbmHTTPAsyncRequest_monitoring">
			<title>Monitoring tab</title>
			<shortDescription>Display events that you have defined for the node.</shortDescription>
		</pageHelp> 

        <fieldHelp id="ComIbmHTTPAsyncRequest_monitoring_monitorEvents">
			<title>Events</title>
			<description>
				<p>Events that you have defined for the node are displayed on this tab. By default, no monitoring events are defined 
                   on any node in a message flow. Use:</p>
                   <ul> 
                       <li>Add to create</li>
                       <li>Edit to change</li>
                       <li>Delete to delete</li>
                   </ul>
                  <p> monitoring events for the node</p>
                <p>You can enable and disable events that are shown here by selecting or clearing the Enabled check box.</p> 
            </description>
            <topic href="../com.ibm.etools.mft.doc/ac60381_.htm">
				<label>Configuring monitoring event sources using monitoring properties</label>
			</topic>
		</fieldHelp>
		
		<!--  HTTP ASYNC RESPONSE NODE HELP -->	
	
	    <pageHelp id="ComIbmHTTPAsyncResponse_basic">
	    	<title>Basic</title>
	    	<shortDescription>Settings for working with the HTTPAsyncResponse node.</shortDescription>
            <moreDescription><p>Use the HTTPAsyncRequest node with the HTTPAsyncResponse node to construct a pair of message flows that interact with a Web service asynchronously.</p>				                               
            </moreDescription>
	    </pageHelp>
	    
	    <pageHelp id="ComIbmHTTPAsyncResponse_validation">
	    	<title>Validation</title>
	    	<shortDescription>Validation settings for the HTTPAsyncResponse node</shortDescription>
            <moreDescription><p>Set validation properties on the HTTPAsyncResponse node.</p>			                               
            </moreDescription>
	    </pageHelp>
	    
	    <!-- HTTP ASYNC RESPONSE NODE - BASIC PAGE -->
	    
	    <fieldHelp id="ComIbmHTTPAsyncResponse_basic_asyncRequestCorrelator">
			<title>Unique identifier</title>
			<description><p>Specify the unique identifier that links your pair of HTTPAsyncRequest and HTTPAsyncResponse nodes. This identifier is used as a unique URL fragment to identify incoming response messages for the HTTPAsyncResponse node.</p></description>
		</fieldHelp>
		
		<pageHelp id="ComIbmHTTPAsyncResponse_default">
			<title>Input message parsing tab</title>
			<shortDescription>Determine how the node parses the response messages.</shortDescription>
		</pageHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_default_messageDomainProperty">
			<title>Message domain</title>
			<description><p>The domain that is used to parse the message. If the field is blank then the default is BLOB.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_default_messageSetProperty">
			<title>Message model</title>
			<description><p>The name or location of the message model schema file in which the message is defined. This list is populated with all available message model schema files for the Message domain that you have selected.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_default_messageTypeProperty">
			<title>Message</title>
			<description><p>The name or location of the message root within your message model schema file. This list is populated with all available messages that are defined in the Message model that you have selected.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_default_messageFormatProperty">
			<title>Physical format</title>
			<description><p>The name of the physical format of the message. If you are using the MRM or IDOC parser, select the physical format of the incoming message from the list. This list includes all the physical formats that you have defined for the selected message model. If you set the Message domain property to DataObject, you can set this property to XML or SAP ALE IDoc. Set this property to SAP ALE IDoc when you have to parse a bit stream from an external source and generate a message tree.</p></description>
		</fieldHelp>
		
		<!-- HTTP ASYNC RESPONSE NODE - PARSER OPTIONS PAGE -->
		
		<pageHelp id="ComIbmHTTPAsyncResponse_parserOptions">
			<title>Parser Options tab</title>
			<shortDescription>Determine the behavior of the XMLNSC parser.</shortDescription>
			<moreDescription>
				<p>Configure the following options to determine the behavior of the XMLNSC parser:</p>
				<ul>
					<li>Build tree using XML schema data types: Select this property to create syntax elements in the message tree with data types taken from the XML Schema. To enable this property, set the Validate property on the Validation tab to "Content" or "Content and Value".</li>
					<li>Use XMLNSC compact parser for XMLNS domain: Select this property to format the response message in XMLNSC for nodes that are connected to the output terminal when the input MQRFH2 header or Response Message Parsing properties Message Domain is XMLNS.</li>
					<li>Retain mixed content: Select this property to create elements in the message tree when the parser finds mixed text in a response message. If you clear the check box, mixed text is ignored and no elements are created.</li>
					<li>Retain comments: Select this property to create elements in the message tree when the parser finds comments in a response message. If you clear the check box, comments are ignored and no elements are created.</li>
					<li>Retain processing instructions: Select this property to create elements in the message tree when the parser finds processing instructions in a response message. If you clear the check box, processing instructions are ignored and no elements are created.</li>
					<li>Opaque elements: Add a list of elements in the response message that are to be opaquely parsed by the XMLNSC parser. Opaque parsing is performed only if validation is not enabled (that is, if the Validate property on the Validation tab is set to "None"); entries that are specified in Opaque Elements are ignored if validation is enabled. </li>
				</ul>
			</moreDescription>
			<topic href="../com.ibm.etools.mft.doc/ac76040_.htm">
				<label>Manipulating messages in the XMLNSC domain</label>
			</topic>
		</pageHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_parserOptions_validateTiming">
			<title>Parse timing</title>
			<description><p>This property controls when an input message is parsed. Valid values are On Demand, Immediate, and Complete.</p>
					<p>By default, this property is set to On Demand, which causes parsing of the message to be delayed. To cause the message to be parsed immediately, see Parsing on demand.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_parserOptions_parserXmlnscBuildTreeUsingXMLSchema">
			<title>Build tree using XML schema data types</title>
			<description><p>This property controls whether the XMLNSC parser creates syntax elements in the message tree with data types taken from the XML schema. You can select this property only if you set the Validate property on the Validation tab to Content or Content and Value.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_parserOptions_parserXmlnscUseForXmlnsDomain">
			<title>Use XMLNSC compact parser for XMLNS domain</title>
			<description><p>This property controls whether the XMLNSC Compact Parser is used for messages in the XMLNS Domain. If you set this property, the message data is displayed under XMLNSC in nodes that are connected to the output terminal when the input MQRFH2 header or the input message Parsing property Message domain is XMLNS.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_parserOptions_parserXmlnscMixedContentRetainMode">
			<title>Retain mixed content</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters mixed text in an input message. If you select the check box, elements are created for mixed text. If you clear the check box, mixed text is ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_parserOptions_parserXmlnscCommentsRetainMode">
			<title>Retain comments</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters comments in an input message. If you select the check box, elements are created for comments. If you clear the check box, comments are ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_parserOptions_parserXmlnscProcessingInstructionsRetainMode">
			<title>Retain processing instructions</title>
			<description><p>This property controls whether the XMLNSC parser creates elements in the message tree when it encounters processing instructions in an input message. If you select the check box, elements are created for processing instructions. If you clear the check box, processing instructions are ignored and no elements are created.</p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_parserOptions_parserXmlnscOpaqueElements">
			<title>Opaque elements</title>
			<description><p>This property is used to specify a list of elements in the input message that are to be opaquely parsed by the XMLNSC parser. Opaque parsing is performed only if validation is not enabled (that is, if Validate is None); entries that are specified in Opaque Elements are ignored if validation is enabled.</p></description>
		</fieldHelp>
	    
	    <!-- HTTP ASYNC RESPONSE NODE - Validation PAGE -->
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_validation_validateMaster">
			<title>Validate</title>
			<description><p>This property controls whether validation takes place. Valid values are None, Content and Value, Content, and Inherit. </p></description>
		</fieldHelp>
		
		<fieldHelp id="ComIbmHTTPAsyncResponse_validation_validateFailureAction">
			<title>Failure action</title>
			<description><p>This property controls what happens if validation fails. You can set this property only if you set Validate to Content or Content and Value. Valid values are User Trace, Local Error Log, Exception, and Exception List. </p></description>
		</fieldHelp>
		
		<!-- HTTP ASYNC RESPONSE NODE - MONITORING PAGE -->
		<pageHelp id="ComIbmHTTPAsyncResponse_monitoring">
			<title>Monitoring tab</title>
			<shortDescription>Display events that you have defined for the node.</shortDescription>
		</pageHelp> 

        <fieldHelp id="ComIbmHTTPAsyncResponse_monitoring_monitorEvents">
			<title>Events</title>
			<description>
				<p>Events that you have defined for the node are displayed on this tab. By default, no monitoring events are defined 
                   on any node in a message flow. Use:</p>
                   <ul> 
                       <li>Add to create</li>
                       <li>Edit to change</li>
                       <li>Delete to delete</li>
                   </ul>
                  <p> monitoring events for the node</p>
                <p>You can enable and disable events that are shown here by selecting or clearing the Enabled check box.</p> 
            </description>
            <topic href="../com.ibm.etools.mft.doc/ac60381_.htm">
				<label>Configuring monitoring event sources using monitoring properties</label>
			</topic>
		</fieldHelp>
		
	</pluginCategory>

</pdHelp>