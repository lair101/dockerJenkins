<?xml version="1.0" encoding="UTF-8"?>
<?NLS TYPE="org.eclipse.help.contexts"?>

<pdHelp xmlns="http://www.ibm.com/visualutils/pdhelpcontent"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ibm.com/visualutils/pdhelpcontent http://www.ibm.com/visualutils/pdhelpcontent">

	<pluginCategory id="com.ibm.etools.mft.ibmnodes">
	
        	
		<!--  MQ Input NODE Basic Tab -->	
	
	    <pageHelp id="ComIbmMQInput_basic">
	    	<title>Basic</title>
	    	<shortDescription>Set the name of the queue from which the message flow receives messages. Configure connection to the Queue Manager using 'MQ Connection' if needed.</shortDescription>
            <moreDescription><p>Use this page to specify the name of the queue from which this node retrieves messages (by using MQGET) for processing in this message flow. You must predefine this MQ queue on the destination queue manager. If the message flow is deployed to an Integration Node that does not have a queue manager, use the 'MQ Connection' tab  if to specify connection information.</p>	
            <p>You can assign a queue manager when you create a new Integration node by using either the <b>mqsicreatebroker</b> command with the -q parameter, or in the New Local Integration Node wizard in the Integration Toolkit.</p>
            <p>You can also assign a queue manager by using the <b>mqsichangebroker</b> command with the -q parameter, or by using the <b>Change</b> menu option on an existing Integration Node in the Integration View of the Integration Toolkit.</p>		                               
            </moreDescription>
	    </pageHelp>
		
	
		<!--MQ Input NODE Basic Tab - queue name -->
		
		<fieldHelp id="ComIbmMQInput_basic_queueName">
			<title>Queue Name</title>
			<description><p>This property identifies the queue that is used to get the incoming message. This queue should be defined on the same queue manager that is specified on the node, by either a node policy or by the queue manager specified on the Integration Node.</p></description>
		</fieldHelp>

		<!--  MQ Input NODE MQ Connection Tab -->	
	    <pageHelp id="ComIbmMQInput_connection">
	    	<title>MQ Connection</title>
	    	<shortDescription>Specify the connection details to process a message on a queue for a local or remote queue manager.</shortDescription>
            <moreDescription>
            <p>The connection details are used only if the Integration Node was created without a queue manager (that is, if the â€“q parameter of the <b>mqsicreatebroker</b> command was not specified when the Integration Node was created).</p>
			<p>You can assign a queue manager when you create a new Integration node by using either the <b>mqsicreatebroker</b> command with the -q parameter, or in the New Local Integration Node wizard in the Integration Toolkit.</p>
            <p>You can also assign a queue manager by using the <b>mqsichangebroker</b> command with the -q parameter, or by using the <b>Change</b> menu option on an existing Integration Node in the Integration View of the Integration Toolkit.</p>
			<p>Click on the Policy tab and clear the Policy URL to use the connection details configured on this tab.</p>
            </moreDescription>
	    </pageHelp>
		<fieldHelp id="ComIbmMQInput_connection_connection">
			<title>Connection type</title>
			<description>
			<p>This properties specifies the type of connection to WebSphere MQ. If you choose to use the queue manager that is specified on the target Integration Node, no configuration is required.</p>
			<ul>
			<li>Local queue manager - If you select this option, you must specify a queue manager name. The message flow will make a server connection to the queue manager (using server bindings).</li>
			<li>MQ client connection properties - If you select this option, you must also specify the following properties: Queue manager host name, Listener port number, Channel name, and Destination queue manager name.</li>
			<li>Client channel definition table (CCDT) file - If you select this option, you must specify a queue manager name.</li> 
			</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQInput_connection_queueManagerHostname">
			<title>Queue Manager Host Name</title>
			<description><p>This property specifies the host name of the queue manager, which can be local (localhost) or remote (valid IP address or host name). Multiple host names can be specified by separating the host names with a comma (for example: hostname1,hostname2,hostname3). If multiple host names are specified, the runtime will move down the comma separated list of host names starting with the first until a connection can successfully be made.</p></description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQInput_connection_listenerPortNumber">
			<title>Listener Port Number</title>
			<description><p>This property specifies the port on which the queue manager is listening. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQInput_connection_channelName">
			<title>Channel Name</title>
			<description><p>This property specifies the name of the channel used by the queue manager to send messages. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQInput_connection_destinationQueueManagerName">
			<title>Destination Queue Manager Name</title>
			<description><p>This property specifies the name of the queue manager on which the message queues are defined. The queue manager can be local or remote.</p>
			<p>If the Connection is set to 'Local queue manager' and this field is blank, the queue manager associated with the integration node is used.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_connection_ccdtURI">
			<title>CCDT URI</title>
			<description><p>This property specifies the location of a Client Channel Definition table (CCDT) file.</p></description>
		</fieldHelp>			
	    <fieldHelp id="ComIbmMQInput_connection_securityIdentity">
			<title>Security Identity</title>
			<description><p>This property specifies an identity that is used to provide user name and password credentials for connections to a secured local or remote queue manager. It can be used to provide credentials on local and client connections. The identity is defined using the mqsisetdbparms command. When you set the security identity by using this command, ensure that it is prefixed by mq::. Do not include the prefix when setting the security identity on the node.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_connection_useSSL">
			<title>Use SSL</title>
			<description><p>This property controls whether the SSL protocol is used when a client connection is made to a remote queue manager. Select this property to provide confidentiality on the client connection by using SSL symmetric key cryptography.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_connection_SSLPeerName">
			<title>SSL Peer Name</title>
			<description><p>This property specifies the name that is passed to the remote queue manager when making the client connection; there must be a positive match for the connection to succeed.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_connection_SSLCipherSpec">
			<title>SSL Cipher Specification</title>
			<description><p>This property specifies the name of the symmetric key cryptography algorithm through which the remote queue manager is secured.</p></description>
		</fieldHelp>	

		<!--  MQ Input NODE Advanced Tab -->	
	    <pageHelp id="ComIbmMQInput_advanced">
	    	<title>Advanced</title>
	    	<shortDescription>Configure how the message is processed, such as its transactional characteristics. </shortDescription>
            <moreDescription>
            <p>Set these properties to define the structure of the output message, and the transactional characteristics of how this message is handled. Many of these properties map to options on the <b>MQGET</b> call</p>
            <ul>
			<li>Transaction mode - This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No. </li>	
            <li>Order mode - The order in which messages are retrieved from the input queue and processed. </li>
            <li>Order field location - An XPath or ESQL expression property to control which part of the message is used to impose ordering on incoming messages when Order mode is User Defined.</li>
            <li>Logical order - If you select this check box, messages are received in logical order, as defined by WebSphere MQ. This option maps to the MQGMO_LOGICAL_ORDER option of the MQGMO of the MQI.</li>
            <li>All messages available - Select All messages available if you want message retrieval and processing to be done only when all messages in a single group are available. </li>
            <li>Match message ID - A correlation ID that must match the correlation ID in the MQMD of the incoming message.</li>
            <li>Match correlation ID - A message ID that must match the message ID in the MQMD of the incoming message. Enter a message identifier if you want the input node to receive only messages that contain a matching message identifier value in the MsgId field of the MQMD.</li>
            <li>Convert - If you select this check box, WebSphere MQ converts data in the message to be received, in conformance with the CodedCharSetId and Encoding values set in the MQMD. </li>
            <li>Convert encoding - The representation used for numeric values in the message data, expressed as an integer value. This property is valid only if you have selected Convert.</li>
            <li>Convert coded character set ID - The coded character set identifier of character data in the message data, expressed as an integer value. This property is valid only if you have selected Convert.</li>
            <li> Commit by message group - This property controls when a transaction is committed when processing messages that are part of a message group. </li>
            <li>z/OS serialization token - On z/OS only: A user-defined token for serialized application support. </li>
            <li>Topic - The default topic for the input message.</li>
            <li>Browse Only - This property controls whether a message is removed from the queue when it is read.</li>
            <li>Reset browse timeout (ms) - The time, in milliseconds, between the last eligible message being browsed on the input queue and the browse being reset to the beginning of the queue.</li>
            </ul>
			</moreDescription>
	    </pageHelp>
		<fieldHelp id="ComIbmMQInput_advanced_transactionMode">
			<title>Transaction mode</title>
			<description><p>This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No.</p>
			    <ul>
				<li>If you select Automatic, the incoming message is received under sync point if it is marked persistent, otherwise it is not received under sync point. The transactionality of any derived messages that are sent later by an output node is determined by the incoming persistence property, unless the output node has overridden transactionality explicitly.</li>
    			<li>If you select Yes, the incoming message is received under sync point. Any derived messages that are sent later by an output node in the same instance of the message flow are sent transactionally, unless the output node has overridden transactionality explicitly.</li>
   				<li>If you select No, the incoming message is not received under sync point. Any derived messages that are sent later by an output node in the message flow are sent non-transactionally, unless the output node has specified that the messages must be put under sync point.</li>
				</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQInput_advanced_orderMode">
			<title>Order mode</title>
			<description><p>The order in which messages are retrieved from the input queue and processed.</p>
			<p>Messages arriving can be processed in order, or any thread can process any message when it is ready. When ordering is imposed, a thread processes a message only if it is the first unprocessed message available with a unique ordering value.</p>
			<p>Valid values are Default, By User ID, By Queue Order, and User Defined. This property has an effect only if the message flow property Additional instances on the Instances tab, is set to greater than zero; that is, if multiple threads read the input queue. Valid values are:</p>
    		<ul>
			<li>Default. Messages are retrieved in the order that is defined by the queue attributes, but this order is not guaranteed because the messages are processed by the message flow.</li>
    		<li>By User ID. Messages that have the same UserIdentifier value in the MQMD are retrieved and processed in the order that is defined by the queue attributes; this order is guaranteed to be preserved when the messages are processed. A message that is associated with a particular user identifier that is being processed by one thread, is completely processed before the same thread, or another thread, can start to process another message with the same user identifier. Ensure that each message has a unique message ID in the MQMD of the incoming message. No other ordering is guaranteed to be preserved.</li>
    		<li>By Queue Order. Messages are retrieved and processed by this node in the order that is defined by the queue attributes; this order is guaranteed to be preserved when the messages are processed. This behavior is identical to the behavior that is exhibited if the message flow property Additional instances is set to zero. However, if you set Order mode to By Queue Order then redeploy the message flow, additional instances that are already running are not released. Therefore, when you set Order mode to By Queue Order, either stop and restart the message flow, or run the mqsireload command for the integration server after you redeploy the flow.</li>
    		<li>User Defined. You can specify a message element using the Order field location property.</li>
			</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQInput_advanced_orderModeLocation">
			<title>Order field location</title>
			<description><p>An XPath or ESQL expression property to control which part of the message is used to impose ordering on incoming messages when Order mode is User Defined.</p>
			<p>If the field is missing, an exception is raised, and the message is rolled back. NULL and empty values are processed separately, in parallel.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQInput_advanced_logicalOrder">
			<title>Logical order</title>
			<description><p>If you select this check box, messages are received in logical order, as defined by WebSphere MQ. This option maps to the MQGMO_LOGICAL_ORDER option of the MQGMO of the MQI. </p>
			<p>If you clear the check box, messages that are sent as part of a group are not received in a predetermined order. If a broker expects to receive messages in groups, and you have not selected this check box, either the order of the input messages is not significant, or you must design the message flow to process them appropriately.</p>
			<p>You must also select Commit by message group if you want message processing to be committed only after the final message of a group has been received and processed.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQInput_advanced_allMsgsAvailable">
			<title>All messages available</title>
			<description><p>Select All messages available if you want message retrieval and processing to be done only when all messages in a single group are available. This property maps to the MQGMO_ALL_MSGS_AVAILABLE option of the MQGMO of the MQI. Clear this check box if message retrieval does not depend on all of the messages in a group being available before processing starts. </p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_matchMsgId">
			<title>Match message ID</title>
			<description><p>A message ID that must match the message ID in the MQMD of the incoming message. Enter a message identifier if you want the input node to receive only messages that contain a matching message identifier value in the MsgId field of the MQMD.</p>
			<p>Enter an even number of hexadecimal digits (characters 0 to 9, A to F, and a to f are valid) up to a maximum of 48 digits. If the matching message identifier that you enter is shorter than the size of the MsgId field, Match message ID is padded on the right with X'00' characters. This property maps to the MQMO_MATCH_MSG_ID option of the MQGMO of the MQI.</p>
			<p>Leave this property blank if you do not want the input node to check that the message ID matches.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_matchCorrelId">
			<title>Match correlation ID</title>
			<description><p>A correlation ID that must match the correlation ID in the MQMD of the incoming message. Enter a message identifier if you want the input node to receive only messages that contain a matching correlation identifier value in the CorrelId field of the MQMD. </p>
			<p>Enter an even number of hexadecimal digits (characters 0 to 9, A to F, and a to f are valid) up to a maximum of 48 digits. If the ID that you enter is shorter than the size of the CorrelId field, it is padded on the right with X'00' characters. This property maps to the MQMO_MATCH_CORREL_ID option of the MQGMO of the MQI.</p>
			<p>Leave this property blank if you do not want the input node to check that the CorrelID matches.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_convert">
			<title>Convert</title>
			<description><p>If you select this check box, WebSphere MQ converts data in the message to be received, in conformance with the CodedCharSetId and Encoding values set in the MQMD. Select Convert if you want WebSphere MQ to perform data conversion on the message when it is retrieved from the queue. This option is useful if you are handling messages in the BLOB domain, or are using a user-defined parser. Do not select this option if you are parsing messages with the XML or MRM domains, because the parser does the conversion.</p>
			<p>WebSphere MQ converts the incoming message to the encoding and coded character set that is specified in the MQMD that the input node supplies on the MQGET call to retrieve the message from the input queue. The broker uses the MQGMO_CONVERT option on the MQGET call; typical rules for WebSphere MQ conversion apply. The values that you specify in the Convert encoding and Convert coded character set ID options are used in the MsgDesc Encoding and CCSID fields in the MQGET call. WebSphere MQ can convert the incoming message only if the MQMD Format field is a built-in WebSphere MQ value that identifies character data, or if a data conversion exit exists in WebSphere MQ. </p>
			<p>This property maps to the MQGMO_CONVERT option of the MQGMO of the MQI.</p>
			<p>Clear the check box if you do not want WebSphere MQ to convert the message.</p>
			<p>If you select this check box, you can also specify values for the Convert encoding and Convert coded character set ID properties.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_convertEncoding">
			<title>Convert encoding</title>
			<description><p>The representation used for numeric values in the message data, expressed as an integer value. This property is valid only if you have selected Convert.</p>
			<p>Enter the number that represents the encoding to which you want to convert numeric data in the message body. Valid values include:</p>
		    <ul>
			<li>Linux platform Windows platform 546 for DOS, all Windows systems, and Linux on x86</li>
    		<li>Linux platform UNIX platform 273 for Linux on Linux on POWERÂ®, Linux on System zÂ®, and all UNIX systems</li>
    		<li>z/OS platform 785 for z/OSÂ® messages that use Binary Packed Decimals, and 273 for messages that use IEEE floating point numbers</li>
			</ul>
			<p>The encoding is used only in the following circumstances:</p>
		    <ul>
		    <li>If a user-defined WebSphere MQ data conversion exit uses the encoding.</li>
    		<li>If the built-in WebSphere MQ conversion exit uses the encoding to convert messages in any of the predefined WebSphere MQ formats.</li>
			</ul>
			<p>If you specify an incorrect value, no conversion is done.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_convertCodedCharSetId">
			<title>Convert coded character set ID</title>
			<description><p>The coded character set identifier of character data in the message data, expressed as an integer value. This property is valid only if you have selected Convert.</p>
			<p>Enter the value that represents the character set identifier to which you want to convert character data in the message body. If you specify an incorrect value, no conversion is done.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_commitByMessageGroup">
			<title>Commit by message group</title>
			<description><p>This property controls when a transaction is committed when processing messages that are part of a message group. If you select the check box, the transaction is committed when the message group has been processed. If you leave this check box cleared, a commit is performed after each message has been propagated completely through the message flow. </p>
			<p>This property is relevant only if you have selected Logical order.</p>
		    <p>Set the Order mode property to By Queue Order if the messages in a group must be retrieved and processed in the order in which they are displayed on the queue.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_serializationToken">
			<title>z/OS serialization token</title>
			<description><p>On z/OS only: A user-defined token for serialized application support. The value that is specified must conform to the rules for a valid ConnTag in the WebSphere MQ MQCNO structure. Enter a serialization token if you want to use the serialized access to shared resources that is provided by WebSphere MQ.</p>
			<p>The value that you provide for the serialization token must conform to the rules described in the Application Programming Reference section of the WebSphere MQ Version 7 product documentation.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_topicProperty">
			<title>Topic</title>
			<description><p>The default topic for the input message. You can associate a message with a publish/subscribe topic by using this property. You can enter any characters as the topic name. When messages pass through the MQInput node, they take on whatever topic name you have entered. (If you are using publish/subscribe, you can subscribe to a topic and see any messages that passed through the MQInput node and were published under that topic name.) If the incoming message has an MQRFH2 header, you do not have to set a value for the Topic property because the value can be obtained from the <b>psc</b> folder in the MQRFH2 header.</p>
			<p>If you set a Topic property value, and that value differs from the <b>Topic</b> value in the MQRFH2 header, the value in the MQRFH2 header takes precedence.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQInput_advanced_browse">
			<title>Browse Only</title>
			<description><p>This property controls whether a message is removed from the queue when it is read. If you select this check box, the message is not removed from the queue when it is read. If you select this option, OutputLocalEnvironment.MQ.GET.Browsed is set to true when a message is propagated to the output terminal of the MQInput node.</p>
			</description>
		</fieldHelp>		
		<fieldHelp id="ComIbmMQInput_advanced_resetBrowseTimeout">
			<title>Reset browse timeout (ms)</title>
			<description><p>The time, in milliseconds, between the last eligible message being browsed on the input queue and the browse being reset to the beginning of the queue.The default value of -1 indicates that the browse is not reset.</p>
			</description>
		</fieldHelp>	

		<!--  MQ Output NODE Basic Tab -->	
	
	    <pageHelp id="ComIbmMQOutput_basic">
	    	<title>Basic</title>
	    	<shortDescription>Enter the queue name to specify the destination of output messages if you set destination mode to queue name on the 'Advanced' page. Configure connection to the Queue Manager using 'MQ Connection' if needed.</shortDescription>
            <moreDescription><p>Do this only if you set destination mode to queue name on the Advanced page. If you select another option for Destination Mode, you do not have to set the queue name.</p>
            <p> If the queue name is specified you must predefine the queue on the destination queue manager. If flow is deployed to the Integration Node that does not have a queue manager specified</p>
            <p> then use 'MQ Connection' tab to specify connection information.</p>	
            <p>The queue manager can be assigned when you create a new Integration node with -q parameter using <b>mqsicreatebroker</b> command or specify the queue manager name on the wizard when creating a new Integration Node in the Toolkit.</p>
            <p>You can also assign a queue manager using <b>mqsichangebroker</b> command and -q parameter or using <b>Change</b> menu option on the existing Integration node in the Integration View in the Toolkit.</p>		                               
            </moreDescription>
	    </pageHelp>
		
	
		<!--MQ Output NODE Basic Tab - queue name -->
		
		<fieldHelp id="ComIbmMQOutput_basic_queueName">
			<title>Queue Name</title>
			<description>
			<p>To send the output message to a single destination queue that is defined by this node, enter the name of the WebSphere MQ output queue to which the message flow sends messages.</p>
			</description>
		</fieldHelp>
		
		
		<!--  MQ Output NODE MQ Connection Tab -->	
	    <pageHelp id="ComIbmMQOutput_connection">
	    	<title>MQ Connection</title>
	    	<shortDescription>Specify the connection details to process a message on a queue for a local or remote queue manager.</shortDescription>
            <moreDescription>
			<p>The connection details are used only if the Integration Node was created without a queue manager (that is, if the â€“q parameter of the <b>mqsicreatebroker</b> command was not specified when the Integration Node was created).</p>
			<p>You can assign a queue manager when you create a new Integration node by using either the <b>mqsicreatebroker</b> command with the -q parameter, or in the New Local Integration Node wizard in the Integration Toolkit.</p>
            <p>You can also assign a queue manager by using the <b>mqsichangebroker</b> command with the -q parameter, or by using the <b>Change</b> menu option on an existing Integration Node in the Integration View of the Integration Toolkit.</p>
            <p>Click on the Policy tab and clear the Policy URL to use the connection details configured on this tab.</p>
            </moreDescription>
			</pageHelp>
		<fieldHelp id="ComIbmMQOutput_connection_connection">
			<title>Connection type</title>
			<description><p>This properties specifies the type of connection to WebSphere MQ. If you choose to use the queue manager that is specified on the target Integration Node, no configuration is required.</p>
			<ul>
			<li>Local queue manager - If you select this option, you must specify a queue manager name. The message flow will make a server connection to the queue manager (using server bindings).</li>
			<li>MQ client connection properties - If you select this option, you must also specify the following properties: Queue manager host name, Listener port number, Channel name, and Destination queue manager name.</li>
			<li>Client channel definition table (CCDT) file - If you select this option, you must specify a queue manager name.</li> 
			</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQOutput_connection_queueManagerHostname">
			<title>Queue Manager Host Name</title>
			<description><p>This property specifies the host name of the queue manager, which can be local (localhost) or remote (valid IP address or host name). Multiple host names can be specified by separating the host names with a comma (for example: hostname1,hostname2,hostname3). If multiple host names are specified, the runtime will move down the comma separated list of host names starting with the first until a connection can successfully be made.</p></description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQOutput_connection_listenerPortNumber">
			<title>Listener Port Number</title>
			<description><p>This property specifies the port on which the queue manager is listening. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQOutput_connection_channelName">
			<title>Channel Name</title>
			<description><p>This property specifies the name of the channel used by the queue manager to receive messages. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQOutput_connection_destinationQueueManagerName">
			<title>Destination Queue Manager Name</title>
			<description><p>This property specifies the name of the queue manager on which the message queues are defined. The queue manager can be local or remote.</p>
			<p>If the Connection is set to 'Local queue manager' and this field is blank, the queue manager associated with the integration node is used.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_connection_ccdtURI">
			<title>CCDT URI</title>
			<description><p>This property specifies the location of a Client Channel Definition table (CCDT) file.</p></description>
		</fieldHelp>	
	    <fieldHelp id="ComIbmMQOutput_connection_securityIdentity">
			<title>Security Identity</title>
			<description><p>This property specifies an identity that is used to provide user name and password credentials for connections to a secured local or remote queue manager. It can be used to provide credentials on local and client connections. The identity is defined using the mqsisetdbparms command. When you set the security identity by using this command, ensure that it is prefixed by mq::. Do not include the prefix when setting the security identity on the node.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_connection_useSSL">
			<title>Use SSL</title>
			<description><p>This property controls whether the SSL protocol is used when a client connection is made to a remote queue manager. Select this property to provide confidentiality on the client connection by using SSL symmetric key cryptography.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_connection_SSLPeerName">
			<title>SSL Peer Name</title>
			<description><p>This property specifies the name that is passed to the remote queue manager when making the client connection; there must be a positive match for the connection to succeed.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_connection_SSLCipherSpec">
			<title>SSL Cipher Specification</title>
			<description><p>This property specifies the name of the symmetric key cryptography algorithm through which the remote queue manager is secured.</p></description>
		</fieldHelp>		

		<!--  MQOutput NODE Advanced Tab -->	
	    <pageHelp id="ComIbmMQOutput_advanced">
	    	<title>Advanced</title>
	    	<shortDescription>Configure how the message is processed, such as its transactional characteristics. </shortDescription>
            <moreDescription>
            <p>Set these properties to define the structure of the output message, and the transactional characteristics of how this message is handled. Many of these properties map to options on the <b>MQGET</b> call</p>
            <ul>
			<li>Destination Mode - The queues to which the output message is sent. </li>
            <li>Transaction mode - This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No. </li>	
            <li>Persistence Mode - This property controls whether the message is put persistently. </li>
            <li>Object Queue Manager - This property specifies the name of a second WebSphere MQ queue manager, which is the target queue manager to which messages are routed from the queue manager that is connected to the MQOutput node.</li>
            <li>New Message ID - If you select this check box, WebSphere MQ generates a new message identifier to replace the contents of the MsgId field in the MQMD.</li>
            <li>New Correlation ID - If you select this check box, WebSphere MQ generates a new correlation identifier to replace the contents of the CorrelId field in the MQMD.</li>
         	<li>Segmentation Allowed - If you select this check box, WebSphere MQ breaks the message into segments in the queue manager. </li>
            <li>Message Context - This property controls how origin context is handled. </li>
            <li>Alternate User Authority - If you select this check box, alternate authority is used when the output message is put and the MQOO_ALTERNATE_USER_AUTHORITY option is set in the open options (MQOO) of the MQI.</li>
            </ul>
			</moreDescription>
	    </pageHelp>
	    <fieldHelp id="ComIbmMQOutput_advanced_destinationMode">
			<title>Destination Mode</title>
			<description><p>The queues to which the output message is sent.</p>
			    <ul>
				<li>If you select Queue Name (the default), the message is sent to the queue that is named in the Queue Name property. If you select this option, you must set the Object Queue Manager and Queue Name properties.</li>
    			<li>If you select Reply To Queue, the message is sent to the queue that is named in the ReplyToQ field in the MQMD.When you select this value, the MQOutput node constructs a WebSphere MQ reply message. For more information about the settings that are used by the MQOutput node and the Root.MQMD folder in this situation.</li>
   				<li>If you select Destination List, the message is sent to the list of queues that are named in the local environment that is associated with the message. The data that you have provided is used in the DestinationData subtree of the local environment. For more information about the DestinationData subtree.</li>
				</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQOutput_advanced_transactionMode">
			<title>Transaction mode</title>
			<description><p>This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No.</p>
			    <ul>
				<li>If you select Automatic, the incoming message is received under sync point if it is marked persistent, otherwise it is not received under sync point. The transactionality of any derived messages that are sent later by an output node is determined by the incoming persistence property, unless the output node has overridden transactionality explicitly.</li>
    			<li>If you select Yes, the incoming message is received under sync point. Any derived messages that are sent later by an output node in the same instance of the message flow are sent transactionally, unless the output node has overridden transactionality explicitly.</li>
   				<li>If you select No, the incoming message is not received under sync point. Any derived messages that are sent later by an output node in the message flow are sent non-transactionally, unless the output node has specified that the messages must be put under sync point.</li>
				</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQOutput_advanced_persistenceMode">
			<title>Persistence Mode</title>
			<description><p>This property controls whether the message is put persistently. </p>
    		<ul>
			<li>If you select Automatic (the default), the persistence is as specified in the incoming message.</li>
    		<li>If you select Yes, the message is put persistently.</li>
    		<li>If you select No, the message is put non-persistently.</li>
    		<li>If you select As Defined for Queue, the message persistence is set as defined for the WebSphere MQ queue.</li>
			</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQOutput_advanced_queueManagerName">
			<title>Object Queue Manager</title>
			<description><p>This property specifies the name of a second WebSphere MQ queue manager, which is the target queue manager to which messages are routed from the queue manager that is connected to the MQOutput node. </p>
			<p>The Object Queue Manager property is required only if the specified queue is defined on another queue manager or is a cluster queue. If it is a cluster queue, the Object Queue Manager can optionally be specified if you want to specify which queue manager receives the message. </p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQOutput_advanced_newMsgId">
			<title>New Message ID</title>
			<description><p>If you select this check box, WebSphere MQ generates a new message identifier to replace the contents of the MsgId field in the MQMD.</p>
			<p>This property maps to the MQPMO_NEW_MSG_ID option of the MQPMO of the MQI. Clear the check box if you do not want to generate a new ID. A new message ID is still generated if you select the Request property on the Request tab.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_advanced_newCorrelId">
			<title>New correlation ID</title>
			<description><p>If you select this check box, WebSphere MQ generates a new correlation identifier to replace the contents of the CorrelId field in the MQMD.</p>
			<p>This property maps to the MQPMO_NEW_CORREL_ID option of the MQPMO of the MQI. Clear the check box if you do not want to generate a new ID. </p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_advanced_segmentationAllowed">
			<title>Segmentation Allowed</title>
			<description><p>If you select this check box, WebSphere MQ breaks the message into segments in the queue manager. </p>
			<p>Clear the check box if you do not want segmentation to occur. For more information about message segmentation.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_advanced_messageContext">
			<title>Message Context</title>
			<description><p>This property controls how origin context is handled. </p>
		    <ul>
			<li>Pass All maps to the MQPMO_PASS_ALL_CONTEXT option of the MQPMO of the MQI.</li>
    		<li>Pass Identity maps to the MQPMO_PASS_IDENTITY_CONTEXT option of the MQPMO of the MQI.</li>
    		<li>Set All maps to the MQPMO_SET_ALL_CONTEXT option of the MQPMO of the MQI.</li>
		    <li>Set Identity maps to the MQPMO_SET_IDENTITY_CONTEXT option of the MQPMO of the MQI.</li>
    		<li>Default maps to the MQPMO_DEFAULT_CONTEXT option of the MQPMO of the MQI.</li>
    		<li>None maps to the MQPMO_NO_CONTEXT option of the MQPMO of the MQI.</li>
			</ul>
			<p>When a security profile is associated with the node and is configured to perform identity propagation, the chosen context can be overridden to ensure that the outgoing identity is set.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQOutput_advanced_alternateUserAuthority">
			<title>Alternate User Authority</title>
			<description><p>If you select this check box, alternate authority is used when the output message is put and the MQOO_ALTERNATE_USER_AUTHORITY option is set in the open options (MQOO) of the MQI. If you select this check box, this option is specified when the queue is opened for output. The alternative user information is retrieved from the context information in the message. Clear the check box if you do not want to specify alternative user authority. If you clear the check box, the broker service user ID is used when the message is put.</p>
			</description>
		</fieldHelp>		

		<!--MQ Reply NODE -->
	    <pageHelp id="ComIbmMQReply_connection">
	    	<title>MQ Connection</title>
	    	<shortDescription>Specify the connection details to process a message on a queue for a local or remote queue manager.</shortDescription>
            <moreDescription>
			<p>The connection details are used only if the Integration Node was created without a queue manager (that is, if the â€“q parameter of the <b>mqsicreatebroker</b> command was not specified when the Integration Node was created).</p>
			<p>You can assign a queue manager when you create a new Integration node by using either the <b>mqsicreatebroker</b> command with the -q parameter, or in the New Local Integration Node wizard in the Integration Toolkit.</p>
            <p>You can also assign a queue manager by using the <b>mqsichangebroker</b> command with the -q parameter, or by using the <b>Change</b> menu option on an existing Integration Node in the Integration View of the Integration Toolkit.</p>
            <p>Click on the Policy tab and clear the Policy URL to use the connection details configured on this tab.</p>
            </moreDescription>
	    </pageHelp>
		<fieldHelp id="ComIbmMQReply_connection_connection">
			<title>Connection type</title>
			<description><p>This properties specifies the type of connection to WebSphere MQ.</p>
			<li>Local queue manager - If you select this option, you must specify a queue manager name. The message flow will make a server connection to the queue manager (using server bindings).</li>
			<li>MQ client connection properties - If you select this option, you must also specify the following properties: Queue manager host name, Listener port number, Channel name, and Destination queue manager name.</li>
			<li>Client channel definition table (CCDT) file - If you select this option, you must specify a queue manager name.</li> 
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQReply_connection_queueManagerHostname">
			<title>Queue Manager Host Name</title>
			<description><p>This property specifies the host name of the queue manager, which can be local (localhost) or remote (valid IP address or host name). Multiple host names can be specified by separating the host names with a comma (for example: hostname1,hostname2,hostname3). If multiple host names are specified, the runtime will move down the comma separated list of host names starting with the first until a connection can successfully be made.</p></description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQReply_connection_listenerPortNumber">
			<title>Listener Port Number</title>
			<description><p>This property specifies the port on which the queue manager is listening. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQReply_connection_channelName">
			<title>Channel Name</title>
			<description><p>This property specifies the name of the channel used by the queue manager to receive messages. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQReply_connection_destinationQueueManagerName">
			<title>Destination Queue Manager Name</title>
			<description><p>This property specifies the name of the queue manager on which the message queues are defined. The queue manager can be local or remote.</p>
			<p>If the Connection is set to 'Local queue manager' and this field is blank, the queue manager associated with the integration node is used.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQReply_connection_ccdtURI">
			<title>CCDT URI</title>
			<description><p>This property specifies the location of a Client Channel Definition table (CCDT) file.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQReply_connection_securityIdentity">
			<title>Security Identity</title>
			<description><p>This property specifies an identity that is used to provide user name and password credentials for connections to a secured local or remote queue manager. It can be used to provide credentials on local and client connections. The identity is defined using the mqsisetdbparms command. When you set the security identity by using this command, ensure that it is prefixed by mq::. Do not include the prefix when setting the security identity on the node.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQReply_connection_useSSL">
			<title>Use SSL</title>
			<description><p>This property controls whether the SSL protocol is used when a client connection is made to a remote queue manager. Select this property to provide confidentiality on the client connection by using SSL symmetric key cryptography.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQReply_connection_SSLPeerName">
			<title>SSL Peer Name</title>
			<description><p>This property specifies the name that is passed to the remote queue manager when making the client connection; there must be a positive match for the connection to succeed.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQReply_connection_SSLCipherSpec">
			<title>SSL Cipher Specification</title>
			<description><p>This property specifies the name of the symmetric key cryptography algorithm through which the remote queue manager is secured.</p></description>
		</fieldHelp>	

		<!--  MQ Reply NODE Advanced Tab -->	
	    <pageHelp id="ComIbmMQReply_advanced">
	    	<title>Advanced</title>
	    	<shortDescription>Configure how the message is processed</shortDescription>
            <moreDescription>
            <ul>
			<li>Transaction mode - This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No. </li>	
            <li>Persistence Mode - This property controls whether the message is put persistently. </li>
         	<li>Segmentation Allowed - If you select this check box, WebSphere MQ breaks the message into segments in the queue manager. </li>
            </ul>
			</moreDescription>
	    </pageHelp>
		<fieldHelp id="ComIbmMQReply_advanced_transactionMode">
			<title>Transaction mode</title>
			<description><p>This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No.</p>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQReply_advanced_persistenceMode">
			<title>Persistence Mode</title>
			<description><p>This property controls whether the message is put persistently. Valid values are Automatic, Yes, No, and As Defined for Queue.</p>
			</description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQReply_advanced_segmentationAllowed">
			<title>Segmentation Allowed</title>
			<description><p>If you select this check box, WebSphere MQ breaks the message into segments in the queue manager. </p>
			</description>
		</fieldHelp>		

		<!--  MQ Get NODE Basic Tab -->	
	
	    <pageHelp id="ComIbmMQGet_basic">
	    	<title>Basic</title>
	    	<shortDescription>Configure the name of the WebSphere MQ message queue from which this node retrieves messages. Configure connection to the Queue Manager using 'MQ Connection' if needed.</shortDescription>
            <moreDescription><p>Use this page to specify the name of the queue from which this node retrieves messages (using MQGET) for processing by this message flow. You must predefine
            this MQ queue on the queue manager. If this queue is not a valid queue, the node generates an exception, and the input message is propagated to the Failure terminal. </p>
            <p> If flow is deployed to the Integration Node that does not have a queue manager then use 'MQ Connection' tab to specify connection information.</p>	
            <p>The queue manager can be assigned when you create a new Integration node with -q parameter using <b>mqsicreatebroker</b> command or specify the queue manager name on the wizard when creating a new Integration Node in the Toolkit.</p>
            <p>You can also assign a queue manager using <b>mqsichangebroker</b> command and -q parameter or using <b>Change</b> menu option on the existing Integration node in the Integration View in the Toolkit.</p>		                               
            </moreDescription>
	    </pageHelp>
		
	
		<!--MQ Get NODE Basic Tab - queue name -->
		
		<fieldHelp id="ComIbmMQGet_basic_queueName">
			<title>Queue Name</title>
			<description><p>This property identifies the queue that is used to retrieve the message from. The queue should be defined on the queue manager that is specified on this node, by the policy or queue manager specified on the Integration node.</p></description>
		</fieldHelp>

		<!--  MQ Get NODE MQ Connection Tab -->	
	    <pageHelp id="ComIbmMQGet_connection">
	    	<title>MQ Connection</title>
	    	<shortDescription>Specify the connection details to process a message on a queue for a local or remote queue manager.</shortDescription>
            <moreDescription>
			<p>The connection details are used only if the Integration Node was created without a queue manager (that is, if the â€“q parameter of the <b>mqsicreatebroker</b> command was not specified when the Integration Node was created).</p>
			<p>You can assign a queue manager when you create a new Integration node by using either the <b>mqsicreatebroker</b> command with the -q parameter, or in the New Local Integration Node wizard in the Integration Toolkit.</p>
            <p>You can also assign a queue manager by using the <b>mqsichangebroker</b> command with the -q parameter, or by using the <b>Change</b> menu option on an existing Integration Node in the Integration View of the Integration Toolkit.</p>
			<p>Click on the Policy tab and clear the Policy URL to use the connection details configured on this tab.</p>
            </moreDescription>
	    </pageHelp>
		<fieldHelp id="ComIbmMQGet_connection_connection">
			<title>Connection type</title>
			<description><p>This properties specifies the type of connection to WebSphere MQ. If you choose to use the queue manager that is specified on the target Integration Node, no configuration is required.</p>
			<ul>
			<li>Local queue manager - If you select this option, you must specify a queue manager name. The message flow will make a server connection to the queue manager (using server bindings).</li>
			<li>MQ client connection properties - If you select this option, you must also specify the following properties: Queue manager host name, Listener port number, Channel name, and Destination queue manager name.</li>
			<li>Client channel definition table (CCDT) file - If you select this option, you must specify a queue manager name.</li> 
			</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQGet_connection_queueManagerHostname">
			<title>Queue Manager Host Name</title>
			<description><p>This property specifies the host name of the queue manager, which can be local (localhost) or remote (valid IP address or host name). Multiple host names can be specified by separating the host names with a comma (for example: hostname1,hostname2,hostname3). If multiple host names are specified, the runtime will move down the comma separated list of host names starting with the first until a connection can successfully be made.</p></description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQGet_connection_listenerPortNumber">
			<title>Listener Port Number</title>
			<description><p>This property specifies the port on which the queue manager is listening. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQGet_connection_channelName">
			<title>Channel Name</title>
			<description><p>This property specifies the name of the channel used by the queue manager to send messages. The queue manager can be local or remote.</p></description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQGet_connection_destinationQueueManagerName">
			<title>Destination Queue Manager Name</title>
			<description><p>This property specifies the name of the queue manager on which the message queues are defined. The queue manager can be local or remote.</p>
			<p>If the Connection is set to 'Local queue manager' and this field is blank, the queue manager associated with the integration node is used.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQGet_connection_ccdtURI">
			<title>CCDT URI</title>
			<description><p>This property specifies the location of a Client Channel Definition table (CCDT) file.</p></description>
		</fieldHelp>			
	    <fieldHelp id="ComIbmMQGet_connection_securityIdentity">
			<title>Security Identity</title>
			<description><p>This property specifies an identity that is used to provide user name and password credentials for connections to a secured local or remote queue manager. It can be used to provide credentials on local and client connections. The identity is defined using the mqsisetdbparms command. When you set the security identity by using this command, ensure that it is prefixed by mq::. Do not include the prefix when setting the security identity on the node.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQGet_connection_useSSL">
			<title>Use SSL</title>
			<description><p>This property controls whether the SSL protocol is used when a client connection is made to a remote queue manager. Select this property to provide confidentiality on the client connection by using SSL symmetric key cryptography.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQGet_connection_SSLPeerName">
			<title>SSL Peer Name</title>
			<description><p>This property specifies the name that is passed to the remote queue manager when making the client connection; there must be a positive match for the connection to succeed.</p></description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQGet_connection_SSLCipherSpec">
			<title>SSL Cipher Specification</title>
			<description><p>This property specifies the name of the symmetric key cryptography algorithm through which the remote queue manager is secured.</p></description>
		</fieldHelp>		

		<!--  MQ Get NODE Advanced Tab -->	
	    <pageHelp id="ComIbmMQGet_advanced">
	    	<title>Advanced</title>
	    	<shortDescription>Configure how the message is processed, such as its transactional characteristics. </shortDescription>
            <moreDescription>
            <p>Set these properties to define the structure of the output message, and the transactional characteristics of how this message is handled. Many of these properties map to options on the <b>MQGET</b> call</p>
            <ul>
			<li>Transaction mode - This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No. </li>	
            <li>Generate mode - This property controls which parts of the message from the input tree are copied.</li>
            <li>Copy message - This property controls which parts of the message from the input tree are copied.</li>
            <li>Copy local environment - This property controls how the local environment is copied to the output message.</li>
            <li>Wait interval (ms) - The maximum time, in milliseconds, to wait for the queue message to be obtained from the message queue.</li>
            <li>Minimum message buffer size (KB) -The minimum size, in KB, of the get buffer. The minimum value of this property is 1.</li>
            </ul>
			</moreDescription>
	    </pageHelp>
		<fieldHelp id="ComIbmMQGet_advanced_transactionMode">
			<title>Transaction mode</title>
			<description><p>This property controls whether the incoming message is received under sync point. Valid values are Automatic, Yes, and No.</p>
			    <ul>
				<li>If you select Automatic, the incoming message is received under sync point if it is marked persistent, otherwise it is not received under sync point. The transactionality of any derived messages that are sent later by an output node is determined by the incoming persistence property, unless the output node has overridden transactionality explicitly.</li>
    			<li>If you select Yes, the incoming message is received under sync point. Any derived messages that are sent later by an output node in the same instance of the message flow are sent transactionally, unless the output node has overridden transactionality explicitly.</li>
   				<li>If you select No, the incoming message is not received under sync point. Any derived messages that are sent later by an output node in the message flow are sent non-transactionally, unless the output node has specified that the messages must be put under sync point.</li>
				</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQGet_advanced_generateMode">
			<title>Generate mode</title>
			<description><p>This property controls which parts of the message from the input tree are copied. </p>
			<p>Select a value for Generate mode from the list to define which components of the output message are generated in the MQGet node, and which components are taken from the input message.</p>
    		<ul>
			<li>If you select None, all the components of the message from the input tree are propagated unchanged.</li>
    		<li>If you select Message (the default), a new Message component is created by the node, but the local environment, environment, and exception list components from the input tree are propagated unchanged.</li>
    		<li>If you select LocalEnvironment, a new local environment component is created by the node, but the message, environment, and exception list components from the input tree are propagated unchanged.</li>
    		<li>If you select Message and LocalEnvironment, new message and local environment components are created by the node, but the environment and exception list components from the input tree are propagated unchanged.</li>
			</ul>
			</description>
		</fieldHelp>
		<fieldHelp id="ComIbmMQGet_advanced_copyMessage">
			<title>Copy message</title>
			<description><p>This property controls which parts of the message from the input tree are copied.</p>
			<p>If you have set Generate mode to either Message or Message And LocalEnvironment, select a value for Copy message from the list to define which parts of the message are generated in the MQGet node, and which parts are taken from the input message.</p>
			<ul>
			<li>If you select None (the default), no part of the input message from the input tree is propagated.</li>
    		<li>If you select Copy Headers, the headers from the input message in the input tree are copied to the output message.</li>
    		<li>If you select Copy Entire Message, the entire input message from the input tree is copied to the output message.</li>
			</ul>
			</description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQGet_advanced_copyLocalEnv">
			<title>Copy local environment</title>
			<description><p>This property controls how the local environment is copied to the output message.</p>
			<p>If you have set Generate mode to either LocalEnvironment or Message And LocalEnvironment, select a value for Copy Local Environment from the list to define which parts of the local environment are generated in the MQGet node, and which parts are taken from the input message.</p>
			<ul>
			<li>If you select Copy Entire LocalEnvironment (the default), at each node in the message flow, a new copy of the local environment is created in the tree, and it is populated with the contents of the local environment from the preceding node. Therefore, if a node changes the local environment, the upstream nodes do not see those changes because they have their own copies. This behavior might be an issue if you are using a FlowOrder node, or if you use the propagate command on a Compute node. The entire local environment that is defined in the input message is copied to the output message.</li>
			<li>If you select None, each node does not generate its own copy of the local environment, but it uses the local environment that is passed to it by the previous node. Therefore, if a node changes the local environment, those changes are seen by the upstream nodes.</li>
			</ul>
			</description>
		</fieldHelp>
	    <fieldHelp id="ComIbmMQGet_advanced_waitInterval">
			<title>Wait interval (ms)</title>
			<description><p>The maximum time, in milliseconds, to wait for the queue message to be obtained from the message queue. </p>
			<p>Provide a value for the Wait interval (ms) property to specify how many milliseconds to wait for a message to be received from the MQGET call. If you select 0, the wait interval is disabled and there is no wait time for messages. The Wait interval (ms) value cannot be negative. If you do not provide a value, the default value of 1000 milliseconds is used.</p>
			</description>
		</fieldHelp>		
	    <fieldHelp id="ComIbmMQGet_advanced_minimumGetBufferSize">
			<title>Minimum message buffer size (KB)</title>
			<description><p>The minimum size, in KB, of the get buffer. The minimum value of this property is 1.</p>
			<p>Provide a value for this property to specify the size of the initial buffer for the MQGET call. The buffer expands automatically to accept a message of any size, but if messages are likely to be large, specify a suitable value to reduce the frequency of the buffer being resized. If you do not provide a value, the size of the buffer is 4 KB.</p>
			</description>
		</fieldHelp>		
	
	</pluginCategory>
</pdHelp>