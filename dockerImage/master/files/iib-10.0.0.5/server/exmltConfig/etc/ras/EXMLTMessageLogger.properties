#*********************************************************************
#* (C) Copyright IBM Corp. 2001                                      *
#* The source code for this program is not published or              *
#* otherwise divested of its trade secrets, irrespective of          *
#* what has been deposited with the US Copyright Office.             *
#*********************************************************************

#-----------------------------------------------------------------------
# The class PropertyDataStore implements a persistent RAS store based
# on properties files.  This sample properties files shows the key/value
# pairs that may be specifed to configure a MessageLogger.  It is
# used in conjunction with RASSampleDataStore.properties, the "master"
# properties file.
#
# If a property has a suitable default, it is commented-out in this
# sample.  To change the default, remove the comment character ('#') and
# change the value.
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
# The name of this object.  It is this name that an application uses to
# retrieve a configured logger from the LogManager through the
# getMessageLogger method.
#
# This value is required.
#-----------------------------------------------------------------------

name=MsgLogger

objectType=messageLogger
filterNames=EXMLTMessageMaskFilter

# It is useful if the environment includes a graphical program which
# displays the RAS Toolkit configuration.
#
# This value is optional and defaults to an empty string.
#-----------------------------------------------------------------------

description=EnhancedXMLTransform Message Logger

#-----------------------------------------------------------------------
# The fully-qualified name of the class file which must be instantiated
# to create one of these objects.
#
# This value is required.
#-----------------------------------------------------------------------

#className=com.ibm.logging.MessageLogger
className=com.ibm.xsl.exmlt.ras.EXMLTMessageLogger


#-----------------------------------------------------------------------
# The group of which this object is a member.  If you don't care to use
# groups, then omit this keyword.  We recommend that an application place
# its loggers in one or more groups.  Handlers are generally
# treated as system-wide resources and should be placed in the base group.
#-----------------------------------------------------------------------

group=com.ibm.xsl.exmlt

#-----------------------------------------------------------------------
# The message mask.  This mask determines which message types the
# object will process.  It is a blank-delimited set of types whose names
# match the RASMessage TYPE_XXXX constants.
#
# This value is optional and defaults to RASMessage.DEFAULT_MASK.
#-----------------------------------------------------------------------
#-----------------------------------------------------------------------
# The state of the logger -- on or off.  This key is set "true" if the
# logger is enabled ("on") or "false" if the logger is disabled ("off").
#
# This value is optional and defaults to "true."
#-----------------------------------------------------------------------

isLogging=true

#-----------------------------------------------------------------------
# The logging mode -- synchronous or asynchronous.  This key is set "true"
# for synchronous operation or "false" for asynchronous mode.
#
# This value is optional and defaults to "false."
#-----------------------------------------------------------------------

#isSync=false

#-----------------------------------------------------------------------
# The blank-delimited names of the handlers which are attached to this
# logger.  The handlers are configured through similar properties files.
# The names used here are the "name" properties of those handlers.
# (For example, "Console" might be the name given to a console handler.)
#
# This value is optional.  However, if a logger is not connected to at
# least one handler, no messages are processed.  Other options are
# available, but they depend on how the RAS Toolkit is used.  For
# example, a WidgetLogManager might be written to connect all loggers to
# a single socket handler.
#-----------------------------------------------------------------------

handlerNames=console

#-----------------------------------------------------------------------
# The name of the organization (perhaps a company) which created this
# logger.
#
# This value is optional and defaults to an empty string.
#-----------------------------------------------------------------------

organization=IBM

#-----------------------------------------------------------------------
# The name of the product to which this logger belongs.
#
# This value is optional and defaults to an empty string.
#-----------------------------------------------------------------------

product=EnhancedXMLTransform Component

#-----------------------------------------------------------------------
# The name of the component within the product to which this logger be-
# longs.  In large projects, it may be desirable to segment the product.
#
# This value is optional and defaults to an empty string.
#-----------------------------------------------------------------------

# component=Backbone

#-----------------------------------------------------------------------
# The name of a server associated with the logged message.  This value
# generally has to be determined at run-time.  For an applet, it might
# be the server which served the applet.
#
# This value is optional and defaults to an empty string.
#-----------------------------------------------------------------------

#server=

#-----------------------------------------------------------------------
# The name of the client associated with the logged message.  This value
# generally has to be determined at run-time.  It might be a user name
# or the IP host name of the machine on which the Java program is
# running.
#
# This value is optional and defaults to an empty string.
#-----------------------------------------------------------------------

#client=

#-----------------------------------------------------------------------
# The name of the message file used by the logger to convert message
# keys to strings.  The name must be fully-qualified, but without the
# ".properties."  For example:
#
#   messageFile=com.ibm.logging.MyMsgs
#
# This value is optional when using the msg() and textMessage() methods
# of the message logger.  When using the message() methods, the message
# file must be specified.
#-----------------------------------------------------------------------

messageFile=com.ibm.wbi.wbi_msgs

#-----------------------------------------------------------------------
# The names of the message keys which should be ignored by the logger.
# More than one key may be specified by separating the names with blanks.
#
# This value is optional.
#-----------------------------------------------------------------------

#suppressedKeys=
