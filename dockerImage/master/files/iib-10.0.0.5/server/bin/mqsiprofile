#!/bin/bash
# Licensed Materials - Property of IBM
# 5724-A82
# (c) Copyright IBM Corp. 2016.
# All Rights Reserved
# US Government Users Restricted Rights - use,
# duplication or disclosure restricted by GSA
# ADP Schedule Contract with IBM Corp.
# Level: S1000-L160516.10113

# Store away the underscore variable for later.
TEMP_UNDERSCORE=$_

# Check that this script was sourced and not executed.
if test "`basename $0 2>/dev/null`" = "mqsiprofile"
then
  echo mqsiprofile must be run in the context of this shell, using the \"source\" or dot \".\" notation, not simply run as a script.
  echo Try using \". $0\" or \"source $0\" from the current context.
  exit 1
fi

if [ -n "${PROSPECTIVE_MQSI_BASE_FILEPATH+MQSI_PROFILE_NOT_SET}" ];
then
  echo mqsiprofile repetition disallowed
  return 1
fi
# LICENSE_ACCEPTED set to 1 by iib command after accepting license
LICENSE_ACCEPTED=0
# Use TEMP_MQSI_BASE_FILEPATH as PROSPECTIVE_MQSI_BASE_FILEPATH if it has been set by the iib command
if [ ! -z "${TEMP_MQSI_BASE_FILEPATH}" ]
then
  PROSPECTIVE_MQSI_BASE_FILEPATH=${TEMP_MQSI_BASE_FILEPATH}
else
  # Check if license has been accepted
  if [ "${LICENSE_ACCEPTED}" = 0 ];
  then
    echo You must accept the license with the iib command before running mqsiprofile
    return 1
  else
    # In ksh shell $0 returns differently depending on if ksh is run or is the default login shell
    if test "$0" = "ksh" || test "$0" = "-ksh"
    then
      TEMP_SOURCE="${.sh.file}"
    elif test "$0" = "dash"
    then
      echo The dash shell is not supported.
      return 1
    else
      if test "${BASH_SOURCE[0]}"
      then
        TEMP_SOURCE="${BASH_SOURCE[0]}"
      else
        # Else we are probably in zsh and so we can use $_
        # This only works with unsetopt function_argzero set as documented in the Knowledge Center
        TEMP_SOURCE=${TEMP_UNDERSCORE}
      fi
    fi

    PROSPECTIVE_MQSI_BASE_FILEPATH=`readlink -f "${TEMP_SOURCE}" | sed -e "s/\/server\/bin\/mqsiprofile//"`
  fi
fi
export PROSPECTIVE_MQSI_BASE_FILEPATH
MQSI_BASE_FILEPATH=${PROSPECTIVE_MQSI_BASE_FILEPATH}
export MQSI_BASE_FILEPATH
MQSI_FILEPATH=${MQSI_BASE_FILEPATH}/server
export MQSI_FILEPATH

if [ ! -n "$MQSI_WORKPATH" ]
then
  #
  # First check whether we are usinga global registry
  #
  if [[ -e "${MQSI_BASE_FILEPATH}/common/GLOBAL_REG" ]]
  then
    read REGVAL < "${MQSI_BASE_FILEPATH}/common/GLOBAL_REG"
    MQSI_WORKPATH="$REGVAL"
  else
    if [[ -n "${MQSI_FORCE_GLOBAL_REGISTRY}" ]]
    then
      REGVAL="${MQSI_FORCE_GLOBAL_REGISTRY}"
      MQSI_WORKPATH="$REGVAL"
    else
      # default to $HOME/iibconfig
      MQSI_WORKPATH="${HOME}/iibconfig"
    fi
  fi

  export MQSI_WORKPATH
fi
  TOOLS_FILEPATH=${MQSI_BASE_FILEPATH}/tools
  export TOOLS_FILEPATH

  PATH=${TOOLS_FILEPATH}${PATH:+":"${PATH}}
  export PATH




MQSI_VERSION=10.0.0.5
MQSI_VERSION_V=10
MQSI_VERSION_R=0
MQSI_VERSION_M=0
MQSI_VERSION_F=5
MQSI_FAD=8
export MQSI_VERSION MQSI_VERSION_V MQSI_VERSION_R MQSI_VERSION_M MQSI_VERSION_F MQSI_FAD

# Save the positional parameters as some shells overwrite "$@" with the call to setmqenv below.
PROFILEDIRS=
i=0
while [ $# -gt 0 ]
do
  PROFILEDIRS[$i]="$1"
  shift
  let "i += 1"
done
# If there is a primary MQ install, ensure that its environement is consistent
if [ -r ${MQ_INSTALLATION_PATH:-/usr}/bin/setmqenv ];
then
  . ${MQ_INSTALLATION_PATH:-/usr}/bin/setmqenv -s -x 64
elif [ -r /usr/bin/setmqenv ];
then
  . /usr/bin/setmqenv -s -x 64
fi
set -- "${PROFILEDIRS[@]}"
unset PROFILEDIRS
unset i

MQSI_EXTENSIONS_PATH=${MQSI_WORKPATH}/extensions/${MQSI_VERSION_V}.${MQSI_VERSION_R}.${MQSI_VERSION_M}
export MQSI_EXTENSIONS_PATH

MQSI_REGISTRY=${MQSI_WORKPATH}
export MQSI_REGISTRY

PATH=${MQSI_EXTENSIONS_PATH}/server/bin:${MQSI_EXTENSIONS_PATH}/bin:${MQSI_BASE_FILEPATH}/server/bin/mosquitto:${MQSI_BASE_FILEPATH}/server/bin:${MQSI_BASE_FILEPATH}/server/isadc${PATH:+":"${PATH}}
export PATH

MQSI_LILPATH=${MQSI_EXTENSIONS_PATH}/server/lil:${MQSI_BASE_FILEPATH}/server/lil:${MQSI_BASE_FILEPATH}/server/jplugin${MQSI_LILPATH:+":"${MQSI_LILPATH}}
export MQSI_LILPATH

MQSI_SECURITY_PROVIDER_PATH=${MQSI_BASE_FILEPATH}/server/SecurityProviders${MQSI_SECURITY_PROVIDER_PATH:+":"${MQSI_SECURITY_PROVIDER_PATH}}
export MQSI_SECURITY_PROVIDER_PATH

MQSI_EXMLTCONFIGPATH=${MQSI_BASE_FILEPATH}/server/exmltConfig
export MQSI_EXMLTCONFIGPATH

MQSI_NODE_PATH=${MQSI_BASE_FILEPATH}/server/nodejs${MQSI_NODE_PATH:+":"${MQSI_NODE_PATH}}
export MQSI_NODE_PATH

LD_LIBRARY_PATH=${MQSI_EXTENSIONS_PATH}/server/lib:${MQSI_EXTENSIONS_PATH}/lib:${MQSI_BASE_FILEPATH}/server/xml4c/lib:${MQSI_BASE_FILEPATH}/server/lib:${MQSI_BASE_FILEPATH}/server/bin:${MQSI_BASE_FILEPATH}/server/ODBC/drivers/lib:${MQSI_BASE_FILEPATH}/server/xlxpc/lib:${MQSI_BASE_FILEPATH}/server/dfdlc/lib${LD_LIBRARY_PATH:+":"${LD_LIBRARY_PATH}}
export LD_LIBRARY_PATH

ICU_DATA=${MQSI_BASE_FILEPATH}/server/xml4c/data${ICU_DATA:+":"${ICU_DATA}}
export ICU_DATA

ICU_PLUGINS=${MQSI_BASE_FILEPATH}/server/xml4c/data${ICU_PLUGINS:+":"${ICU_PLUGINS}}
export ICU_PLUGINS

NLSPATH=${MQSI_BASE_FILEPATH}/server/messages/%L/%N:${MQSI_BASE_FILEPATH}/server/messages/En_US/%N${NLSPATH:+":"${NLSPATH}}
export NLSPATH

MQSI_JARPATH=${MQSI_BASE_FILEPATH}/common/jetty/lib:${MQSI_BASE_FILEPATH}/common/classes:${MQSI_BASE_FILEPATH}/server/classes:${MQSI_BASE_FILEPATH}/server/messages${MQSI_JARPATH:+":"${MQSI_JARPATH}}
export MQSI_JARPATH

MQSI_CATALINA_HOME=${MQSI_BASE_FILEPATH}/server/catalina
export MQSI_CATALINA_HOME

MQSI_WEBADMIN_HOME=${MQSI_BASE_FILEPATH}/server/webadmin
export MQSI_WEBADMIN_HOME

CLASSPATH=${MQSI_BASE_FILEPATH}/server/messages:${MQSI_BASE_FILEPATH}/common/classes:${MQSI_BASE_FILEPATH}/server/classes:${MQSI_BASE_FILEPATH}/common/jackson/lib/jackson-dataformat-yaml-2.2.2.jar:${MQSI_BASE_FILEPATH}/common/jackson/lib/jackson-core-2.2.2.jar:${MQSI_BASE_FILEPATH}/common/jackson/lib/jackson-databind-2.2.2.jar:${MQSI_BASE_FILEPATH}/common/jackson/lib/jackson-annotations-2.2.2.jar:${MQSI_BASE_FILEPATH}/common/jetty/lib/websocket-common.jar:${MQSI_BASE_FILEPATH}/common/jetty/lib/websocket-client.jar:${MQSI_BASE_FILEPATH}/common/jetty/lib/websocket-api.jar:${MQSI_BASE_FILEPATH}/common/jetty/lib/jetty-http.jar:${MQSI_BASE_FILEPATH}/common/jetty/lib/jetty-client.jar:${MQSI_BASE_FILEPATH}/common/jetty/lib/jetty-util.jar:${MQSI_BASE_FILEPATH}/common/jetty/lib/jetty-io.jar:${MQSI_BASE_FILEPATH}/common/classes/IntegrationAPI.jar:${MQSI_BASE_FILEPATH}/server/classes/brokerutil.jar${CLASSPATH:+":"${CLASSPATH}}:${MQSI_WORKPATH}/common/wsrr
export CLASSPATH

MIBDIRS=${MQSI_BASE_FILEPATH}/server/snmp-mib${MIBDIRS:+":"${MIBDIRS}}
export MIBDIRS

MQSI_PROCESSOR_ARCHITECTURE=64
export MQSI_PROCESSOR_ARCHITECTURE

# Source the IE02 profile if present.
IE02_PATH=${MQSI_BASE_FILEPATH}/ie02
if [ -r "${IE02_PATH}" ]; then
  . ${IE02_PATH}/IE02.sh ${IE02_PATH}
fi

if [ -d "${MQSI_WORKPATH}/common/profiles" ]
then
  for SCRIPT in ${MQSI_WORKPATH}/common/profiles/*.sh; do
    if [ -r "${SCRIPT}" ]; then
      if [ -z "$(basename ${SCRIPT} | grep IE02)" ]; then
        . ${SCRIPT}
      fi
    fi
  done
fi

# JRE path overrides in custom profiles are not allowed from 7.0 onwards
MQSI_JREPATH=${MQSI_BASE_FILEPATH}/common/jdk/jre
export MQSI_JREPATH

PATH=${MQSI_JREPATH}/bin${PATH:+":"${PATH}}
export PATH

LD_LIBRARY_PATH=${MQSI_JREPATH}/lib/amd64:${MQSI_JREPATH}/lib/amd64/classic${LD_LIBRARY_PATH:+":"${LD_LIBRARY_PATH}}
export LD_LIBRARY_PATH

echo
echo MQSI $MQSI_VERSION
echo $MQSI_FILEPATH
echo
